[{'Selections':[
    {'ServiceProvider':[{'Id':'73b4bd39-1a47-4fc6-aa8d-ce169e4acf58','Name':'Local Computer','Items':[{'StatusVariable':'$Cache:LocalComputer','Buttons':[{'Icon':'ArrowAltCircleLeft','Title':'wwww','DataSet':'null','Content':["\r\n            New-UDButton -Text \"Stop Dashobard\" -OnClick {\r\n                $Dashboard = Get-PSUDashboard -ComputerName $Cache:ServerUrlAdress -AppToken $Cache:GlobalAdminAppToken | Where-Object Name -eq 'psucaAdmin'\r\n                if($Dashboard.Status -eq 'Stopped'){\r\n                    Show-UDToast -Message 'Dashboard is stopped, cannot be stopped'\r\n                }\r\n                elseif($Dashboard.Status -eq 'Started'){\r\n                    $Dashboard | Stop-PSUDashBoard\r\n                    Show-UDToast -Message 'Dashboard is stopped'\r\n                }\r\n                Hide-UDModal\r\n            } -ClassName \"interface-box-btn\"\r\n            New-UDButton -Text \"Start Dashboard\" -OnClick {\r\n                $Dashboard = Get-PSUDashboard -ComputerName $Cache:ServerUrlAdress -AppToken $Cache:GlobalAdminAppToken | Where-Object Name -eq 'psucaAdmin'\r\n                if($Dashboard.Status -eq 'Stopped'){\r\n                    $Dashboard | Start-PSUDashBoard\r\n                    Show-UDToast -Message 'Dashboard is started'\r\n                }\r\n                elseif($Dashboard.Status -eq 'Started'){\r\n                    Show-UDToast -Message 'Dashboard is started, cannot be started'\r\n                }\r\n                Hide-UDModal\r\n            } -ClassName \"interface-box-btn\"\r\n        "]},{'Icon':'FileMedical','Title':'qqqqq','DataSet':'null','Content':["\r\n            New-UDButton -Text \"Stop Dashobard\" -OnClick {\r\n                $Dashboard = Get-PSUDashboard -ComputerName $Cache:ServerUrlAdress -AppToken $Cache:GlobalAdminAppToken | Where-Object Name -eq 'psucaAdmin'\r\n                if($Dashboard.Status -eq 'Stopped'){\r\n                    Show-UDToast -Message 'Dashboard is stopped, cannot be stopped'\r\n                }\r\n                elseif($Dashboard.Status -eq 'Started'){\r\n                    $Dashboard | Stop-PSUDashBoard\r\n                    Show-UDToast -Message 'Dashboard is stopped'\r\n                }\r\n                Hide-UDModal\r\n            } -ClassName \"interface-box-btn\"\r\n            New-UDButton -Text \"Start Dashboard\" -OnClick {\r\n                $Dashboard = Get-PSUDashboard -ComputerName $Cache:ServerUrlAdress -AppToken $Cache:GlobalAdminAppToken | Where-Object Name -eq 'psucaAdmin'\r\n                if($Dashboard.Status -eq 'Stopped'){\r\n                    $Dashboard | Start-PSUDashBoard\r\n                    Show-UDToast -Message 'Dashboard is started'\r\n                }\r\n                elseif($Dashboard.Status -eq 'Started'){\r\n                    Show-UDToast -Message 'Dashboard is started, cannot be started'\r\n                }\r\n                Hide-UDModal\r\n            } -ClassName \"interface-box-btn\"\r\n        "]}]}]}]},
    {'TerminalProvider':[{'Id':'73b4bd39-1a47-4fc6-aa8d-ce169e4acf58','Name':'Terminal','Items':[{'StatusVariable':'$Cache:LocalComputerTerminal','Buttons':[{'Icon':'Server','Title':'aaa','DataSet':'null','Content':["\r\n            New-UDButton -Text \"Stop Dashobard\" -OnClick {\r\n                $Dashboard = Get-PSUDashboard -ComputerName $Cache:ServerUrlAdress -AppToken $Cache:GlobalAdminAppToken | Where-Object Name -eq 'psucaAdmin'\r\n                if($Dashboard.Status -eq 'Stopped'){\r\n                    Show-UDToast -Message 'Dashboard is stopped, cannot be stopped'\r\n                }\r\n                elseif($Dashboard.Status -eq 'Started'){\r\n                    $Dashboard | Stop-PSUDashBoard\r\n                    Show-UDToast -Message 'Dashboard is stopped'\r\n                }\r\n                Hide-UDModal\r\n            } -ClassName \"interface-box-btn\"\r\n            New-UDButton -Text \"Start Dashboard\" -OnClick {\r\n                $Dashboard = Get-PSUDashboard -ComputerName $Cache:ServerUrlAdress -AppToken $Cache:GlobalAdminAppToken | Where-Object Name -eq 'psucaAdmin'\r\n                if($Dashboard.Status -eq 'Stopped'){\r\n                    $Dashboard | Start-PSUDashBoard\r\n                    Show-UDToast -Message 'Dashboard is started'\r\n                }\r\n                elseif($Dashboard.Status -eq 'Started'){\r\n                    Show-UDToast -Message 'Dashboard is started, cannot be started'\r\n                }\r\n                Hide-UDModal\r\n            } -ClassName \"interface-box-btn\"\r\n        "]},{'Icon':'Hourglass','Title':'asdasd','DataSet':'null','Content':["\r\n            $Session:DashboardEditUrlDynamicScriptblock = $False\r\n\r\n            if($Session:ButtonDataSetCondition -eq 'null' -or $Session:ButtonDataSetCondition -eq \"null\" -or $Session:ButtonDataSetCondition -eq $null){\r\n                $PSCOJson = '['+'{\r\n  \"DashboardUrlAddress\": {\r\n    \"title\": \"Url Address\",\r\n    \"condition\": true,\r\n    \"value\": \"http://localhost:5000/\"\r\n  },\r\n  \"DashboardUrl\": {\r\n    \"title\": \"Url\",\r\n    \"condition\": true,\r\n    \"value\": \"qqq\"\r\n  }\r\n}'+']'\r\n            }\r\n            else{\r\n                $PSCOJson = $Session:ButtonDataSet\r\n            }\r\n            $Session:PSCOFromJson    = $PSCOJson | ConvertFrom-Json -Depth 100\r\n            $Session:PSCOMemberTypes = ($Session:PSCOFromJson | gm | ? {$_.MemberType -eq 'NoteProperty'})\r\n            if($null -ne $Session:PSCOMemberTypes){\r\n                foreach ($Item in $Session:PSCOMemberTypes) {\r\n                    $MemberName          = $Item.Name\r\n                    $InvokeItemCondition = (('$'+'Session:'+'PSCOFromJson'+'.'+\"$MemberName\")+'.'+'condition'|iex)\r\n                    $InvokeItemTitle     = (('$'+'Session:'+'PSCOFromJson'+'.'+\"$MemberName\")+'.'+'title'|iex)\r\n                    $InvokeItemValue     = (('$'+'Session:'+'PSCOFromJson'+'.'+\"$MemberName\")+'.'+'value'|iex)\r\n                    if($InvokeItemCondition -eq $true){\r\n                        if($MemberName -eq 'DashboardUrlAddress'){\r\n                            $Session:DashboardUrlAddressCreator = $InvokeItemValue\r\n                        }\r\n                        elseif($MemberName -eq 'DashboardUrl'){\r\n                            $Session:DashboardUrlCreator = $InvokeItemValue\r\n                        }\r\n                    }\r\n                    if($InvokeItemCondition -eq $false){\r\n\r\n                    }\r\n                }\r\n            }\r\n            $Session:CompositeDashboardUrl = \"$Session:DashboardUrlAddressCreator\"+\"$Session:DashboardUrlCreator\"\r\n            New-UDDynamic -Id 'DashboardEditUrlDynamicId' -Content {\r\n                if($Session:DashboardEditUrlDynamicScriptblock -eq $True){\r\n                    if($Session:ButtonDataSetCondition -eq 'null' -or $Session:ButtonDataSetCondition -eq \"null\" -or $Session:ButtonDataSetCondition -eq $null){\r\n                        $PSCOJson = '['+'{\r\n  \"DashboardUrlAddress\": {\r\n    \"title\": \"Url Address\",\r\n    \"condition\": true,\r\n    \"value\": \"http://localhost:5000/\"\r\n  },\r\n  \"DashboardUrl\": {\r\n    \"title\": \"Url\",\r\n    \"condition\": true,\r\n    \"value\": \"qqq\"\r\n  }\r\n}'+']'\r\n                    }\r\n                    else{\r\n                        $PSCOJson = $Session:ButtonDataSet\r\n                    }\r\n                    $Session:PSCOFromJson    = $PSCOJson | ConvertFrom-Json -Depth 100\r\n                    $Session:PSCOMemberTypes = ($Session:PSCOFromJson | gm | ? {$_.MemberType -eq 'NoteProperty'})\r\n                    New-UDElement -Tag 'table' -Content {\r\n                        if($null -ne $Session:PSCOMemberTypes){\r\n                            foreach ($Item in $Session:PSCOMemberTypes) {\r\n                                $MemberName          = $Item.Name\r\n                                $InvokeItemCondition = (('$'+'Session:'+'PSCOFromJson'+'.'+\"$MemberName\")+'.'+'condition'|iex)\r\n                                $InvokeItemTitle     = (('$'+'Session:'+'PSCOFromJson'+'.'+\"$MemberName\")+'.'+'title'|iex)\r\n                                $InvokeItemValue     = (('$'+'Session:'+'PSCOFromJson'+'.'+\"$MemberName\")+'.'+'value'|iex)\r\n                                if($InvokeItemCondition -eq $true){\r\n                                    New-UDElement -Tag 'tr' -Content {\r\n                                        New-UDElement -Tag 'td' -Content {\r\n                                            New-UDElement -Tag 'tr' -Content {\r\n                                                New-UDTypography -Text $InvokeItemTitle -ClassName 'interface-box-inner-title'\r\n                                            }\r\n                                        }\r\n                                        New-UDElement -Tag 'td' -Content {\r\n                                            New-UDElement -Tag 'tr' -Content {\r\n                                                New-UDTextbox -Id (($Item.Name)+'IdTextBox') -Value $InvokeItemValue -Type text -ClassName 'interface-box-text'\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    if($MemberName -eq 'DashboardUrlAddress'){\r\n                                        $Session:DashboardUrlAddressCreator = $InvokeItemValue\r\n                                    }\r\n                                    elseif($MemberName -eq 'DashboardUrl'){\r\n                                        $Session:DashboardUrlCreator = $InvokeItemValue\r\n                                    }\r\n                                }\r\n                                elseif($InvokeItemCondition -eq $false){\r\n        \r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    New-UDButton -Text \"Save Parameters\" -OnClick {\r\n                        $Session:CompositeDashboardUrl = \"$Session:DashboardUrlAddressCreator\"+\"$Session:DashboardUrlCreator\"\r\n                        foreach ($Item in $Session:PSCOMemberTypes) {\r\n                            $MemberName           = $Item.Name\r\n                            $InvokeItemCondition  = (('$'+'Session:'+'PSCOFromJson'+'.'+\"$MemberName\")+'.'+'condition'|iex)\r\n                            $InvokeItemTitle      = (('$'+'Session:'+'PSCOFromJson'+'.'+\"$MemberName\")+'.'+'title'|iex)\r\n                            $GetVariableItemValue = (Get-UDElement -Id (($Item.Name)+'IdTextBox')).Value\r\n                            '$'+\"$MemberName\"+'='+'@'+'{'+'condition'+'='+'$'+'InvokeItemCondition'+';'+'title'+'='+\"'\"+\"$InvokeItemTitle\"+\"'\"+';'+'value'+'='+\"'\"+\"$GetVariableItemValue\"+\"'\"+'}'|iex\r\n                        }\r\n                        $PSCOTable = [PSCustomObject]@{\r\n                            DashboardUrlAddress = $DashboardUrlAddress\r\n                            DashboardUrl        = $DashboardUrl\r\n                        }\r\n                        $Session:PSCOJson = $PSCOTable\r\n                        \r\n                        $BlockIdJson         = $Session:BlockId\r\n                        $BlockIdJsonId       = $BlockIdJson.Id\r\n                        $BlockIdJsonBlock    = $BlockIdJson.Path\r\n                        $BlockIdJsonProvider = $BlockIdJson.Provider\r\n                        if($BlockIdJsonBlock -eq 'ServerBlock'){\r\n                            $CreateFilePath  = \"$Cache:InterfaceServerBlockDatabasePath\"+\"$BlockIdJsonId\"+'.json'\r\n                        }\r\n                        elseif($BlockIdJsonBlock -eq 'ComponentsBlock'){\r\n                            $CreateFilePath  = \"$Cache:InterfaceComponentsBlockDatabasePath\"+\"$BlockIdJsonId\"+'.json'\r\n                        }\r\n                        elseif($BlockIdJsonBlock -eq 'PsucaControllerBlock'){\r\n                            $CreateFilePath  = \"$Cache:InterfacePsucaControllerBlockDatabasePath\"+\"$BlockIdJsonId\"+'.json'\r\n                        }\r\n                        elseif($BlockIdJsonBlock -eq 'PsucaDashboardBlock'){\r\n                            $CreateFilePath  = \"$Cache:InterfacePsucaDashboardBlockDatabasePath\"+\"$BlockIdJsonId\"+'.json'\r\n                        }\r\n                        \r\n                        \r\n                        \r\n        \r\n                        if(Test-Path $CreateFilePath){\r\n                            $FilePathGc         = gc $CreateFilePath\r\n                            $FilePathJson       = $FilePathGc | ConvertFrom-Json\r\n                            \r\n                            ((((($FilePathJson.Selections).$BlockIdJsonProvider).Items).Buttons)[$Session:ButtonCounter]).DataSet = $Session:PSCOJson\r\n                            $FilePathToJson     = $FilePathJson | ConvertTo-Json -Depth 100\r\n                            Set-Content $CreateFilePath -Value $FilePathToJson\r\n                            Show-UDToast -Message $CreateFilePath -Duration 50000\r\n        \r\n                            if($BlockIdJsonBlock -eq 'ServerBlock'){\r\n                                (((((($Cache:ServerBlockData[$ItemNumber]).Selections).$BlockIdJsonProvider).Items).Buttons)[$Session:ButtonCounter]).DataSet = $Session:PSCOJson\r\n                            }\r\n                            elseif($BlockIdJsonBlock -eq 'ComponentsBlock'){\r\n                                (((((($Cache:ComponentsBlockData[$ItemNumber]).Selections).$BlockIdJsonProvider).Items).Buttons)[$Session:ButtonCounter]).DataSet = $Session:PSCOJson\r\n                            }\r\n                            elseif($BlockIdJsonBlock -eq 'PsucaControllerBlock'){\r\n                                (((((($Cache:PsucaControllerBlockData[$ItemNumber]).Selections).$BlockIdJsonProvider).Items).Buttons)[$Session:ButtonCounter]).DataSet = $Session:PSCOJson\r\n                            }\r\n                            elseif($BlockIdJsonBlock -eq 'PsucaDashboardBlock'){\r\n                                (((((($Cache:PsucaDashboardBlockData[$ItemNumber]).Selections).$BlockIdJsonProvider).Items).Buttons)[$Session:ButtonCounter]).DataSet = $Session:PSCOJson\r\n                            }\r\n                            \r\n                            Show-UDToast -Message 'Parameters is saved' -Duration 50000\r\n                        }\r\n                        $Session:DashboardEditUrlDynamicScriptblock = $False\r\n                        Sync-UDElement -Id 'DashboardEditUrlDynamicId'\r\n                        Sync-UDElement -Id 'InterfaceServersBlockInvokeContentDynamicId'\r\n                        Hide-UDModal\r\n                    } -ClassName \"interface-box-btn\"\r\n                }\r\n                elseif($Session:DashboardEditUrlDynamicScriptblock -eq $False){\r\n                    New-UDButton -Text \"New Tab\" -OnClick {\r\n                        Invoke-UDRedirect -Url (\"$Session:CompositeDashboardUrl\") -OpenInNewWindow\r\n                        Hide-UDModal\r\n                    } -ClassName \"interface-box-btn\"\r\n                    New-UDButton -Text \"Open here\" -OnClick {\r\n                        Invoke-UDRedirect -Url (\"$Session:CompositeDashboardUrl\")\r\n                    } -ClassName \"interface-box-btn\"\r\n                    New-UDButton -Text \"Edit url\" -OnClick {\r\n                        $Session:DashboardEditUrlDynamicScriptblock = $True\r\n                        Sync-UDElement -Id 'DashboardEditUrlDynamicId'\r\n                    } -ClassName \"interface-box-btn\"\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        "]}]}]}]}
]}]
