[{'GroupName':'my_final_group','ModelId':'5b3b7d33-40ad-4925-a95d-d84a4fead21f','ModelName':'my_final_model','Data':{
  "Id": "c88fa622-9e27-42f2-94d9-92689ae5fc84",
  "Name": "final_table",
  "Datasets": [
    {
      "TableId": "c88fa622-9e27-42f2-94d9-92689ae5fc84",
      "ItemId": "69e4940b-bb0a-4293-a877-1b4c445b023c",
      "ItemName": "final_item_id",
      "ItemType": "1",
      "ItemTypeKey": "None",
      "ItemTypeData": "Int",
      "ItemMandatory": true
    },
    {
      "TableId": "c88fa622-9e27-42f2-94d9-92689ae5fc84",
      "ItemId": "d659b0c6-e452-4664-81e0-2eb18b122757",
      "ItemName": "final_item_name",
      "ItemType": "2",
      "ItemTypeKey": "None",
      "ItemTypeData": "String",
      "ItemMandatory": "True"
    }
  ],
  "FunctionsGet": "function Get-PSUCA-final_table {[CmdletBinding()]Param([Parameter(Mandatory=$true,ValueFromPipelineByPropertyName)][string]$CacheMethod,[Parameter(Mandatory=$true,ValueFromPipelineByPropertyName)][string]$CacheType,[Parameter(Mandatory=$true,ValueFromPipelineByPropertyName)][string]$CachePoint,[Parameter(Mandatory=$true,ValueFromPipelineByPropertyName)][hashtable]$CacheData,[Parameter(Mandatory=$True,ValueFromPipelineByPropertyName)][Int]$Argument_final_item_id,[Parameter(Mandatory=$True,ValueFromPipelineByPropertyName)][String]$Argument_final_item_name)Begin{[string]$CacheModelId='5b3b7d33-40ad-4925-a95d-d84a4fead21f';[string]$CacheTableId='c88fa622-9e27-42f2-94d9-92689ae5fc84';[string]$CachePSU='_c88fa622_9e27_42f2_94d9_92689ae5fc84';[string]$CacheTerminal='$Global:c88fa622_9e27_42f2_94d9_92689ae5fc84'}Process{\r\n                                            switch ($CacheMethod) {\r\n                                                'local'    {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $CachePath    = $CacheData.Path\r\n                                                                $DatabasePath = \"$CachePath\"+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+\"$CachePoint\"+'\\'+'data.db'\r\n                                                                if(Test-Path $DatabasePath){\r\n                                                                    $DatabasePathGc  = gc $DatabasePath\r\n                                                                    $DatabaseList    = $DatabasePathGc|iex\r\n                                                                    if($DatabaseList){\r\n                                                                        $Arguments            = '[{\"Name\":\"final_item_id\",\"Type\":\"1\",\"TypeData\":\"Int\",\"Mandatory\":true},{\"Name\":\"final_item_name\",\"Type\":\"2\",\"TypeData\":\"String\",\"Mandatory\":\"True\"}]'\r\n                                                                        $ArgumentsJson        = $Arguments | ConvertFrom-Json -Depth 100\r\n                                                                        $ArgumentsXml         = $ArgumentsJson | ConvertTo-Xml\r\n                                                                        $ArgumentsItemTypeXml = $ArgumentsJson | ? {$_.Type -eq '1'} | ConvertTo-Xml\r\n                                                                        $ArgumentsXmlName     = (((($ArgumentsXml.Objects).Object).Property) | ? {$_.Name -eq 'Name'}).\"#text\"\r\n                                                                        $ArgumentsXmlIdName   = (((($ArgumentsItemTypeXml.Objects).Object).Property) | ? {$_.Name -eq 'Name'}).\"#text\" | sort -Top 1\r\n                                                                        $PreNameList = @()\r\n                                                                        foreach ($Name in $ArgumentsXmlName) {\r\n                                                                            if($PreNameList -match $Name){}\r\n                                                                            else{$PreNameList += $Name}\r\n                                                                        }\r\n                                                                        $NameList = @()\r\n                                                                        foreach ($Name in $PreNameList) {\r\n                                                                            if($ArgumentsXmlIdName -match $Name){}\r\n                                                                            else{$NameList += $Name}\r\n                                                                        }\r\n    \r\n                                                                        $ArgumentTopValue = (('$Argument_'+\"$ArgumentsXmlIdName\")|iex)\r\n    \r\n                                                                        if($ArgumentTopValue -eq '0'){\r\n                                                                            $DatabaseList = $DatabaseList\r\n                                                                            foreach ($Name in $NameList) {\r\n                                                                                'if('+'$null'+' -ne '+('$PSBoundParameters.'+'Argument_'+\"$Name\")+')'+'{'+\r\n                                                                                    '$DatabaseSelector'+'='+'$DatabaseList'+'|'+'?'+'{'+'$_.'+\"$Name\"+' -match '+'$Argument_'+\"$Name\"+'}'+';'+\r\n                                                                                    '$DatabaseList'+'='+'$DatabaseSelector'+';'+\r\n                                                                                '}'|iex\r\n                                                                            }\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $DatabaseListIndex = $ArgumentTopValue-1\r\n                                                                            $DatabaseList      = $DatabaseList[$DatabaseListIndex]\r\n                                                                            foreach ($Name in $NameList) {\r\n                                                                                'if('+'$null'+' -ne '+('$PSBoundParameters.'+'Argument_'+\"$Name\")+')'+'{'+\r\n                                                                                    '$DatabaseSelector'+'='+'$DatabaseList'+'|'+'?'+'{'+'$_.'+\"$Name\"+' -match '+'$Argument_'+\"$Name\"+'}'+';'+\r\n                                                                                    '$DatabaseList'+'='+'$DatabaseSelector'+';'+\r\n                                                                                '}'|iex\r\n                                                                            }\r\n                                                                        }\r\n                                                                        if($DatabaseList){\r\n                                                                            $FunctionResult  = $DatabaseList|ConvertTo-Json -Depth 100\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $FunctionResult = 'null'\r\n                                                                        }\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = 'null'\r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $CacheArrayList = $CacheData.ArrayList\r\n                                                                $CachePath      = $CacheData.Path\r\n                                                                $DatabasePath   = \"$CachePath\"+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+\"$CachePoint\"+'\\'+'data.db'\r\n                                                                if(Test-Path $DatabasePath){\r\n                                                                    if($null -ne $($CacheArrayList -match \"^[\\d\\.]+$\") -and (($null -eq $($CacheArrayList -match '^[A-Z]+$')) -or ($false -eq $($CacheArrayList -match '^[A-Z]+$')))){\r\n                                                                        $DatabasePathGc = gc $DatabasePath\r\n                                                                        $DatabaseList   = $DatabasePathGc|iex\r\n\r\n                                                                        # VALIDATION ARRAY LIST\r\n                                                                        $DatabaseIndex  = $DatabaseList.Count-1\r\n                                                                        $ArrayNum       = 0\r\n                                                                        $ArrayNumList   = @()\r\n                                                                        foreach ($ArrayItem in $CacheArrayList) {\r\n                                                                            if($ArrayItem -gt $DatabaseIndex){\r\n                                                                                $ArrayNumList   += $ArrayNum\r\n                                                                                $ArrayValidation = $true\r\n                                                                            }\r\n                                                                            $ArrayNum++\r\n                                                                        }\r\n                                                                        if($ArrayValidation -eq $true){\r\n                                                                            foreach ($IndexNum in $ArrayNumList) {\r\n                                                                                $CacheArrayList[$IndexNum] = $null\r\n                                                                            }\r\n                                                                            $CacheArrayList = $CacheArrayList.Where({ $null -ne $_ })\r\n                                                                        }\r\n\r\n                                                                        if($DatabaseList){\r\n                                                                            $CacheList      = @()\r\n                                                                            foreach ($Index in $CacheArrayList) {\r\n                                                                                $CacheList += $DatabaseList[$Index]\r\n                                                                            }\r\n    \r\n                                                                            $Arguments            = '[{\"Name\":\"final_item_id\",\"Type\":\"1\",\"TypeData\":\"Int\",\"Mandatory\":true},{\"Name\":\"final_item_name\",\"Type\":\"2\",\"TypeData\":\"String\",\"Mandatory\":\"True\"}]'\r\n                                                                            $ArgumentsJson        = $Arguments | ConvertFrom-Json -Depth 100\r\n                                                                            $ArgumentsXml         = $ArgumentsJson | ConvertTo-Xml\r\n                                                                            $ArgumentsItemTypeXml = $ArgumentsJson | ? {$_.Type -eq '1'} | ConvertTo-Xml\r\n                                                                            $ArgumentsXmlName     = (((($ArgumentsXml.Objects).Object).Property) | ? {$_.Name -eq 'Name'}).\"#text\"\r\n                                                                            $ArgumentsXmlIdName   = (((($ArgumentsItemTypeXml.Objects).Object).Property) | ? {$_.Name -eq 'Name'}).\"#text\" | sort -Top 1\r\n                                                                            $PreNameList = @()\r\n                                                                            foreach ($Name in $ArgumentsXmlName) {\r\n                                                                                if($PreNameList -match $Name){}\r\n                                                                                else{$PreNameList += $Name}\r\n                                                                            }\r\n                                                                            $NameList = @()\r\n                                                                            foreach ($Name in $PreNameList) {\r\n                                                                                if($ArgumentsXmlIdName -match $Name){}\r\n                                                                                else{$NameList += $Name}\r\n                                                                            }\r\n        \r\n                                                                            $ArgumentTopValue = (('$Argument_'+\"$ArgumentsXmlIdName\")|iex)\r\n        \r\n                                                                            if($ArgumentTopValue -eq '0'){\r\n                                                                                $CacheList = $CacheList\r\n                                                                                foreach ($Name in $NameList) {\r\n                                                                                    'if('+'$null'+' -ne '+('$PSBoundParameters.'+'Argument_'+\"$Name\")+')'+'{'+\r\n                                                                                        '$DatabaseSelector'+'='+'$CacheList'+'|'+'?'+'{'+'$_.'+\"$Name\"+' -match '+'$Argument_'+\"$Name\"+'}'+';'+\r\n                                                                                        '$CacheList'+'='+'$DatabaseSelector'+';'+\r\n                                                                                    '}'|iex\r\n                                                                                }\r\n                                                                            }\r\n                                                                            else{\r\n                                                                                $CacheListIndex = $ArgumentTopValue-1\r\n                                                                                $CacheList      = $CacheList[$CacheListIndex]\r\n                                                                                foreach ($Name in $NameList) {\r\n                                                                                    'if('+'$null'+' -ne '+('$PSBoundParameters.'+'Argument_'+\"$Name\")+')'+'{'+\r\n                                                                                        '$DatabaseSelector'+'='+'$CacheList'+'|'+'?'+'{'+'$_.'+\"$Name\"+' -match '+'$Argument_'+\"$Name\"+'}'+';'+\r\n                                                                                        '$CacheList'+'='+'$DatabaseSelector'+';'+\r\n                                                                                    '}'|iex\r\n                                                                                }\r\n                                                                            }                                                                        \r\n                                                                            if($CacheList){\r\n                                                                                $FunctionResult  = $CacheList|ConvertTo-Json -Depth 100\r\n                                                                            }\r\n                                                                            else{\r\n                                                                                $FunctionResult = 'null'\r\n                                                                            }\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $FunctionResult = 'null'\r\n                                                                        }\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    else{\r\n                                                        $FunctionResult = $false\r\n                                                    }\r\n                                                }\r\n                                                'psu'      {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CachePSU){\r\n                                                                $ApiDataPSCO = [PSCustomObject]@{\r\n                                                                    Id        = $CachePSU\r\n                                                                    ArrayList = $null\r\n                                                                    Content   = $null\r\n                                                                }\r\n                                                                $RequestData = iwr ('http://localhost:5000/'+'api/stream') -Method Post -Body (@{Token='testapiapptoken';ApiType='GET';;ApiArg='All';ApiData=$ApiDataPSCO} | ConvertTo-Json -Depth 100) -ContentType 'application/json'\r\n                                                                if($RequestData.Content){\r\n                                                                    $DatabaseList       = $RequestData.Content|ConvertFrom-Json -Depth 100\r\n                                                                    if($DatabaseList){\r\n                                                                        $Arguments            = '[{\"Name\":\"final_item_id\",\"Type\":\"1\",\"TypeData\":\"Int\",\"Mandatory\":true},{\"Name\":\"final_item_name\",\"Type\":\"2\",\"TypeData\":\"String\",\"Mandatory\":\"True\"}]'\r\n                                                                        $ArgumentsJson        = $Arguments | ConvertFrom-Json -Depth 100\r\n                                                                        $ArgumentsXml         = $ArgumentsJson | ConvertTo-Xml\r\n                                                                        $ArgumentsItemTypeXml = $ArgumentsJson | ? {$_.Type -eq '1'} | ConvertTo-Xml\r\n                                                                        $ArgumentsXmlName     = (((($ArgumentsXml.Objects).Object).Property) | ? {$_.Name -eq 'Name'}).\"#text\"\r\n                                                                        $ArgumentsXmlIdName   = (((($ArgumentsItemTypeXml.Objects).Object).Property) | ? {$_.Name -eq 'Name'}).\"#text\" | sort -Top 1\r\n                                                                        $PreNameList = @()\r\n                                                                        foreach ($Name in $ArgumentsXmlName) {\r\n                                                                            if($PreNameList -match $Name){}\r\n                                                                            else{$PreNameList += $Name}\r\n                                                                        }\r\n                                                                        $NameList = @()\r\n                                                                        foreach ($Name in $PreNameList) {\r\n                                                                            if($ArgumentsXmlIdName -match $Name){}\r\n                                                                            else{$NameList += $Name}\r\n                                                                        }\r\n    \r\n                                                                        $ArgumentTopValue = (('$Argument_'+\"$ArgumentsXmlIdName\")|iex)\r\n    \r\n                                                                        if($ArgumentTopValue -eq '0'){\r\n                                                                            $DatabaseList = $DatabaseList\r\n                                                                            foreach ($Name in $NameList) {\r\n                                                                                'if('+'$null'+' -ne '+('$PSBoundParameters.'+'Argument_'+\"$Name\")+')'+'{'+\r\n                                                                                    '$DatabaseSelector'+'='+'$DatabaseList'+'|'+'?'+'{'+'$_.'+\"$Name\"+' -match '+'$Argument_'+\"$Name\"+'}'+';'+\r\n                                                                                    '$DatabaseList'+'='+'$DatabaseSelector'+';'+\r\n                                                                                '}'|iex\r\n                                                                            }\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $DatabaseListIndex = $ArgumentTopValue-1\r\n                                                                            $DatabaseList      = $DatabaseList[$DatabaseListIndex]\r\n                                                                            foreach ($Name in $NameList) {\r\n                                                                                'if('+'$null'+' -ne '+('$PSBoundParameters.'+'Argument_'+\"$Name\")+')'+'{'+\r\n                                                                                    '$DatabaseSelector'+'='+'$DatabaseList'+'|'+'?'+'{'+'$_.'+\"$Name\"+' -match '+'$Argument_'+\"$Name\"+'}'+';'+\r\n                                                                                    '$DatabaseList'+'='+'$DatabaseSelector'+';'+\r\n                                                                                '}'|iex\r\n                                                                            }\r\n                                                                        }\r\n                                                                        \r\n                                                                        if($DatabaseList){\r\n                                                                            $FunctionResult = $DatabaseList|ConvertTo-Json -Depth 100\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $FunctionResult = 'null'\r\n                                                                        }\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = 'null'\r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CachePSU){\r\n                                                                $ApiDataPSCO = [PSCustomObject]@{\r\n                                                                    Id        = $CachePSU\r\n                                                                    ArrayList = $CacheData.ArrayList\r\n                                                                    Content   = $CacheData.Content\r\n                                                                }\r\n                                                                $RequestData = iwr ('http://localhost:5000/'+'api/stream') -Method Post -Body (@{Token='testapiapptoken';ApiType='GET';;ApiArg='Selected';ApiData=$ApiDataPSCO} | ConvertTo-Json -Depth 100) -ContentType 'application/json'\r\n                                                                if($RequestData.Content){\r\n                                                                    $DatabaseList       = $RequestData.Content|ConvertFrom-Json -Depth 100\r\n                                                                    if($DatabaseList){\r\n                                                                        $Arguments            = '[{\"Name\":\"final_item_id\",\"Type\":\"1\",\"TypeData\":\"Int\",\"Mandatory\":true},{\"Name\":\"final_item_name\",\"Type\":\"2\",\"TypeData\":\"String\",\"Mandatory\":\"True\"}]'\r\n                                                                        $ArgumentsJson        = $Arguments | ConvertFrom-Json -Depth 100\r\n                                                                        $ArgumentsXml         = $ArgumentsJson | ConvertTo-Xml\r\n                                                                        $ArgumentsItemTypeXml = $ArgumentsJson | ? {$_.Type -eq '1'} | ConvertTo-Xml\r\n                                                                        $ArgumentsXmlName     = (((($ArgumentsXml.Objects).Object).Property) | ? {$_.Name -eq 'Name'}).\"#text\"\r\n                                                                        $ArgumentsXmlIdName   = (((($ArgumentsItemTypeXml.Objects).Object).Property) | ? {$_.Name -eq 'Name'}).\"#text\" | sort -Top 1\r\n                                                                        $PreNameList = @()\r\n                                                                        foreach ($Name in $ArgumentsXmlName) {\r\n                                                                            if($PreNameList -match $Name){}\r\n                                                                            else{$PreNameList += $Name}\r\n                                                                        }\r\n                                                                        $NameList = @()\r\n                                                                        foreach ($Name in $PreNameList) {\r\n                                                                            if($ArgumentsXmlIdName -match $Name){}\r\n                                                                            else{$NameList += $Name}\r\n                                                                        }\r\n    \r\n                                                                        $ArgumentTopValue = (('$Argument_'+\"$ArgumentsXmlIdName\")|iex)\r\n    \r\n                                                                        if($ArgumentTopValue -eq '0'){\r\n                                                                            $DatabaseList = $DatabaseList\r\n                                                                            foreach ($Name in $NameList) {\r\n                                                                                'if('+'$null'+' -ne '+('$PSBoundParameters.'+'Argument_'+\"$Name\")+')'+'{'+\r\n                                                                                    '$DatabaseSelector'+'='+'$DatabaseList'+'|'+'?'+'{'+'$_.'+\"$Name\"+' -match '+'$Argument_'+\"$Name\"+'}'+';'+\r\n                                                                                    '$DatabaseList'+'='+'$DatabaseSelector'+';'+\r\n                                                                                '}'|iex\r\n                                                                            }\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $DatabaseListIndex = $ArgumentTopValue-1\r\n                                                                            $DatabaseList      = $DatabaseList[$DatabaseListIndex]\r\n                                                                            foreach ($Name in $NameList) {\r\n                                                                                'if('+'$null'+' -ne '+('$PSBoundParameters.'+'Argument_'+\"$Name\")+')'+'{'+\r\n                                                                                    '$DatabaseSelector'+'='+'$DatabaseList'+'|'+'?'+'{'+'$_.'+\"$Name\"+' -match '+'$Argument_'+\"$Name\"+'}'+';'+\r\n                                                                                    '$DatabaseList'+'='+'$DatabaseSelector'+';'+\r\n                                                                                '}'|iex\r\n                                                                            }\r\n                                                                        }\r\n                                                                        \r\n                                                                        if($DatabaseList){\r\n                                                                            $FunctionResult = $DatabaseList|ConvertTo-Json -Depth 100\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $FunctionResult = 'null'        \r\n                                                                        }\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = 'null'        \r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    else{\r\n                                                        $FunctionResult = $false\r\n                                                    }\r\n                                                }\r\n                                                'sql'      {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $Parameters = Invoke-Command {\r\n                                                                    $SqlDatabaseName  = $CacheModelId\r\n                                                                    $ConnectionString = $CacheData.ConnectionString -replace 'importdatabasename',\"$SqlDatabaseName\"\r\n                                                                    $QueryCommand     = 'SELECT'+' '+'*'+' '+'FROM'+' '+\"$CacheTableId\"\r\n                                                                    $QueryColumnName  = $CacheColumn\r\n                                                                }\r\n                                                                $StartSqlSession = Invoke-Command {\r\n                                                                    $Connection                  = New-Object System.Data.SqlClient.SqlConnection\r\n                                                                    $Connection.ConnectionString = $ConnectionString\r\n                                                                    $Connection.Open()\r\n                                                                }\r\n                                                                $NewQuery = Invoke-Command {\r\n                                                                    $Query               = “$global:queryString\"\r\n                                                                    $Command             = $Connection.CreateCommand()\r\n                                                                    $Command.CommandText = $Query\r\n                                                                    $SqlDataReader       = $Command.ExecuteReader()\r\n                                                                    #Fetch data and write out to files\r\n                                                                    while ($SqlDataReader.Read()) {\r\n                                                                        Write-Output $SqlDataReader[$QueryColumn];\r\n                                                                    }\r\n                                                                }\r\n                                                                $CloseSession = Invoke-Command {\r\n                                                                    $Connection.Close()\r\n                                                                    $Connection.Dispose()\r\n                                                                }\r\n                                                                switch (1,2,3,4,5,6){\r\n                                                                    1{$Param       = $Parameters      }\r\n                                                                    2{$Start       = $StartSqlSession }\r\n                                                                    3{$QueryString = $QueryCommand    }\r\n                                                                    4{$QueryColumn = $QueryColumnName }\r\n                                                                    5{$QueryResult = $NewQuery        }\r\n                                                                    6{$Close       = $CloseSqlSession }\r\n                                                                }\r\n                                                                $FunctionResult = $QueryResult\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $Parameters = Invoke-Command {\r\n                                                                    $SqlDatabaseName  = $CacheModelId\r\n                                                                    $ConnectionString = $CacheData.ConnectionString -replace 'importdatabasename',\"$SqlDatabaseName\"\r\n                                                                    $QueryCommand     = 'SELECT'+' '+\"'\"+\"$CacheValue\"+\"'\"+' '+'FROM'+' '+\"$CacheTableId\"\r\n                                                                    $QueryColumnName  = $CacheColumn\r\n                                                                }\r\n                                                                $StartSqlSession = Invoke-Command {\r\n                                                                    $Connection                  = New-Object System.Data.SqlClient.SqlConnection\r\n                                                                    $Connection.ConnectionString = $ConnectionString\r\n                                                                    $Connection.Open()\r\n                                                                }\r\n                                                                $NewQuery = Invoke-Command {\r\n                                                                    $Query               = “$global:queryString\"\r\n                                                                    $Command             = $Connection.CreateCommand()\r\n                                                                    $Command.CommandText = $Query\r\n                                                                    $SqlDataReader       = $Command.ExecuteReader()\r\n                                                                    #Fetch data and write out to files\r\n                                                                    while ($SqlDataReader.Read()) {\r\n                                                                        Write-Output $SqlDataReader[$QueryColumn];\r\n                                                                    }\r\n                                                                }\r\n                                                                $CloseSession = Invoke-Command {\r\n                                                                    $Connection.Close()\r\n                                                                    $Connection.Dispose()\r\n                                                                }\r\n                                                                switch (1,2,3,4,5,6){\r\n                                                                    1{$Param       = $Parameters      }\r\n                                                                    2{$Start       = $StartSqlSession }\r\n                                                                    3{$QueryString = $QueryCommand    }\r\n                                                                    4{$QueryColumn = $QueryColumnName }\r\n                                                                    5{$QueryResult = $NewQuery        }\r\n                                                                    6{$Close       = $CloseSqlSession }\r\n                                                                }\r\n                                                                $FunctionResult = $QueryResult\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                'terminal' {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $RepositoryPath  = $CacheTerminal|iex\r\n                                                                $DatabaseList    = $RepositoryPath\r\n                                                                if($DatabaseList){\r\n                                                                    $Arguments            = '[{\"Name\":\"final_item_id\",\"Type\":\"1\",\"TypeData\":\"Int\",\"Mandatory\":true},{\"Name\":\"final_item_name\",\"Type\":\"2\",\"TypeData\":\"String\",\"Mandatory\":\"True\"}]'\r\n                                                                    $ArgumentsJson        = $Arguments | ConvertFrom-Json -Depth 100\r\n                                                                    $ArgumentsXml         = $ArgumentsJson | ConvertTo-Xml\r\n                                                                    $ArgumentsItemTypeXml = $ArgumentsJson | ? {$_.Type -eq '1'} | ConvertTo-Xml\r\n                                                                    $ArgumentsXmlName     = (((($ArgumentsXml.Objects).Object).Property) | ? {$_.Name -eq 'Name'}).\"#text\"\r\n                                                                    $ArgumentsXmlIdName   = (((($ArgumentsItemTypeXml.Objects).Object).Property) | ? {$_.Name -eq 'Name'}).\"#text\" | sort -Top 1\r\n                                                                    $PreNameList = @()\r\n                                                                    foreach ($Name in $ArgumentsXmlName) {\r\n                                                                        if($PreNameList -match $Name){}\r\n                                                                        else{$PreNameList += $Name}\r\n                                                                    }\r\n                                                                    $NameList = @()\r\n                                                                    foreach ($Name in $PreNameList) {\r\n                                                                        if($ArgumentsXmlIdName -match $Name){}\r\n                                                                        else{$NameList += $Name}\r\n                                                                    }\r\n\r\n                                                                    $ArgumentTopValue = (('$Argument_'+\"$ArgumentsXmlIdName\")|iex)\r\n\r\n                                                                    if($ArgumentTopValue -eq '0'){\r\n                                                                        $DatabaseList = $DatabaseList\r\n                                                                        foreach ($Name in $NameList) {\r\n                                                                            'if('+'$null'+' -ne '+('$PSBoundParameters.'+'Argument_'+\"$Name\")+')'+'{'+\r\n                                                                                '$DatabaseSelector'+'='+'$DatabaseList'+'|'+'?'+'{'+'$_.'+\"$Name\"+' -match '+'$Argument_'+\"$Name\"+'}'+';'+\r\n                                                                                '$DatabaseList'+'='+'$DatabaseSelector'+';'+\r\n                                                                            '}'|iex\r\n                                                                        }\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $DatabaseListIndex = $ArgumentTopValue-1\r\n                                                                        $DatabaseList      = $DatabaseList[$DatabaseListIndex]\r\n                                                                        foreach ($Name in $NameList) {\r\n                                                                            'if('+'$null'+' -ne '+('$PSBoundParameters.'+'Argument_'+\"$Name\")+')'+'{'+\r\n                                                                                '$DatabaseSelector'+'='+'$DatabaseList'+'|'+'?'+'{'+'$_.'+\"$Name\"+' -match '+'$Argument_'+\"$Name\"+'}'+';'+\r\n                                                                                '$DatabaseList'+'='+'$DatabaseSelector'+';'+\r\n                                                                            '}'|iex\r\n                                                                        }\r\n                                                                    }\r\n\r\n                                                                    if($DatabaseList){\r\n                                                                        $FunctionResult = $DatabaseList|ConvertTo-Json -Depth 100\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = 'null'        \r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = 'null'\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $CacheArrayList  = $CacheData.ArrayList\r\n                                                                $RepositoryPath  = $CacheTerminal|iex\r\n                                                                $DatabaseList    = $RepositoryPath\r\n                                                                if($null -ne $($CacheArrayList -match \"^[\\d\\.]+$\") -and (($null -eq $($CacheArrayList -match '^[A-Z]+$')) -or ($false -eq $($CacheArrayList -match '^[A-Z]+$')))){\r\n                                                                    if($DatabaseList){\r\n\r\n                                                                        # VALIDATION ARRAY LIST\r\n                                                                        $DatabaseIndex  = $DatabaseList.Count-1\r\n                                                                        $ArrayNum       = 0\r\n                                                                        $ArrayNumList   = @()\r\n                                                                        foreach ($ArrayItem in $CacheArrayList) {\r\n                                                                            if($ArrayItem -gt $DatabaseIndex){\r\n                                                                                $ArrayNumList   += $ArrayNum\r\n                                                                                $ArrayValidation = $true\r\n                                                                            }\r\n                                                                            $ArrayNum++\r\n                                                                        }\r\n                                                                        if($ArrayValidation -eq $true){\r\n                                                                            foreach ($IndexNum in $ArrayNumList) {\r\n                                                                                $CacheArrayList[$IndexNum] = $null\r\n                                                                            }\r\n                                                                            $CacheArrayList = $CacheArrayList.Where({ $null -ne $_ })\r\n                                                                        }\r\n\r\n                                                                        $CacheList      = @()\r\n                                                                        foreach ($Index in $CacheArrayList) {\r\n                                                                            $CacheList += $DatabaseList[$Index]\r\n                                                                        }\r\n    \r\n                                                                        $Arguments            = '[{\"Name\":\"final_item_id\",\"Type\":\"1\",\"TypeData\":\"Int\",\"Mandatory\":true},{\"Name\":\"final_item_name\",\"Type\":\"2\",\"TypeData\":\"String\",\"Mandatory\":\"True\"}]'\r\n                                                                        $ArgumentsJson        = $Arguments | ConvertFrom-Json -Depth 100\r\n                                                                        $ArgumentsXml         = $ArgumentsJson | ConvertTo-Xml\r\n                                                                        $ArgumentsItemTypeXml = $ArgumentsJson | ? {$_.Type -eq '1'} | ConvertTo-Xml\r\n                                                                        $ArgumentsXmlName     = (((($ArgumentsXml.Objects).Object).Property) | ? {$_.Name -eq 'Name'}).\"#text\"\r\n                                                                        $ArgumentsXmlIdName   = (((($ArgumentsItemTypeXml.Objects).Object).Property) | ? {$_.Name -eq 'Name'}).\"#text\" | sort -Top 1\r\n                                                                        $PreNameList = @()\r\n                                                                        foreach ($Name in $ArgumentsXmlName) {\r\n                                                                            if($PreNameList -match $Name){}\r\n                                                                            else{$PreNameList += $Name}\r\n                                                                        }\r\n                                                                        $NameList = @()\r\n                                                                        foreach ($Name in $PreNameList) {\r\n                                                                            if($ArgumentsXmlIdName -match $Name){}\r\n                                                                            else{$NameList += $Name}\r\n                                                                        }\r\n    \r\n                                                                        $ArgumentTopValue = (('$Argument_'+\"$ArgumentsXmlIdName\")|iex)\r\n    \r\n                                                                        if($ArgumentTopValue -eq '0'){\r\n                                                                            $CacheList = $CacheList\r\n                                                                            foreach ($Name in $NameList) {\r\n                                                                                'if('+'$null'+' -ne '+('$PSBoundParameters.'+'Argument_'+\"$Name\")+')'+'{'+\r\n                                                                                    '$DatabaseSelector'+'='+'$CacheList'+'|'+'?'+'{'+'$_.'+\"$Name\"+' -match '+'$Argument_'+\"$Name\"+'}'+';'+\r\n                                                                                    '$CacheList'+'='+'$DatabaseSelector'+';'+\r\n                                                                                '}'|iex\r\n                                                                            }\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $CacheListIndex = $ArgumentTopValue-1\r\n                                                                            $CacheList      = $CacheList[$CacheListIndex]\r\n                                                                            foreach ($Name in $NameList) {\r\n                                                                                'if('+'$null'+' -ne '+('$PSBoundParameters.'+'Argument_'+\"$Name\")+')'+'{'+\r\n                                                                                    '$DatabaseSelector'+'='+'$CacheList'+'|'+'?'+'{'+'$_.'+\"$Name\"+' -match '+'$Argument_'+\"$Name\"+'}'+';'+\r\n                                                                                    '$CacheList'+'='+'$DatabaseSelector'+';'+\r\n                                                                                '}'|iex\r\n                                                                            }\r\n                                                                        }                                                                        \r\n    \r\n                                                                        if($CacheList){\r\n                                                                            $FunctionResult = $CacheList|ConvertTo-Json -Depth 100\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $FunctionResult = 'null'        \r\n                                                                        }\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = 'null'        \r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    else{\r\n                                                        $FunctionResult = $false\r\n                                                    }\r\n                                                }\r\n                                                'terminal-cachefile' {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $CachePath    = $CacheData.Path\r\n                                                                $DatabasePath = \"$CachePath\"+\"$CachePoint\"+'\\'+'cache'+'\\'+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+'data.db'\r\n                                                                if(Test-Path $DatabasePath){\r\n                                                                    $DatabasePathGc  = gc $DatabasePath\r\n                                                                    $DatabaseList    = $DatabasePathGc|iex\r\n                                                                    if($DatabaseList){\r\n                                                                        $Arguments            = '[{\"Name\":\"final_item_id\",\"Type\":\"1\",\"TypeData\":\"Int\",\"Mandatory\":true},{\"Name\":\"final_item_name\",\"Type\":\"2\",\"TypeData\":\"String\",\"Mandatory\":\"True\"}]'\r\n                                                                        $ArgumentsJson        = $Arguments | ConvertFrom-Json -Depth 100\r\n                                                                        $ArgumentsXml         = $ArgumentsJson | ConvertTo-Xml\r\n                                                                        $ArgumentsItemTypeXml = $ArgumentsJson | ? {$_.Type -eq '1'} | ConvertTo-Xml\r\n                                                                        $ArgumentsXmlName     = (((($ArgumentsXml.Objects).Object).Property) | ? {$_.Name -eq 'Name'}).\"#text\"\r\n                                                                        $ArgumentsXmlIdName   = (((($ArgumentsItemTypeXml.Objects).Object).Property) | ? {$_.Name -eq 'Name'}).\"#text\" | sort -Top 1\r\n                                                                        $PreNameList = @()\r\n                                                                        foreach ($Name in $ArgumentsXmlName) {\r\n                                                                            if($PreNameList -match $Name){}\r\n                                                                            else{$PreNameList += $Name}\r\n                                                                        }\r\n                                                                        $NameList = @()\r\n                                                                        foreach ($Name in $PreNameList) {\r\n                                                                            if($ArgumentsXmlIdName -match $Name){}\r\n                                                                            else{$NameList += $Name}\r\n                                                                        }\r\n    \r\n                                                                        $ArgumentTopValue = (('$Argument_'+\"$ArgumentsXmlIdName\")|iex)\r\n    \r\n                                                                        if($ArgumentTopValue -eq '0'){\r\n                                                                            $DatabaseList = $DatabaseList\r\n                                                                            foreach ($Name in $NameList) {\r\n                                                                                'if('+'$null'+' -ne '+('$PSBoundParameters.'+'Argument_'+\"$Name\")+')'+'{'+\r\n                                                                                    '$DatabaseSelector'+'='+'$DatabaseList'+'|'+'?'+'{'+'$_.'+\"$Name\"+' -match '+'$Argument_'+\"$Name\"+'}'+';'+\r\n                                                                                    '$DatabaseList'+'='+'$DatabaseSelector'+';'+\r\n                                                                                '}'|iex\r\n                                                                            }\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $DatabaseListIndex = $ArgumentTopValue-1\r\n                                                                            $DatabaseList      = $DatabaseList[$DatabaseListIndex]\r\n                                                                            foreach ($Name in $NameList) {\r\n                                                                                'if('+'$null'+' -ne '+('$PSBoundParameters.'+'Argument_'+\"$Name\")+')'+'{'+\r\n                                                                                    '$DatabaseSelector'+'='+'$DatabaseList'+'|'+'?'+'{'+'$_.'+\"$Name\"+' -match '+'$Argument_'+\"$Name\"+'}'+';'+\r\n                                                                                    '$DatabaseList'+'='+'$DatabaseSelector'+';'+\r\n                                                                                '}'|iex\r\n                                                                            }\r\n                                                                        }\r\n    \r\n                                                                        if($DatabaseList){\r\n                                                                            $FunctionResult = $DatabaseList|ConvertTo-Json -Depth 100\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $FunctionResult = 'null'        \r\n                                                                        }\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = 'null'\r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $CacheArrayList = $CacheData.ArrayList\r\n                                                                $CachePath      = $CacheData.Path\r\n                                                                $DatabasePath   = \"$CachePath\"+\"$CachePoint\"+'\\'+'cache'+'\\'+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+'data.db'\r\n                                                                if(Test-Path $DatabasePath){\r\n                                                                    if($null -ne $($CacheArrayList -match \"^[\\d\\.]+$\") -and (($null -eq $($CacheArrayList -match '^[A-Z]+$')) -or ($false -eq $($CacheArrayList -match '^[A-Z]+$')))){\r\n                                                                        $DatabasePathGc = gc $DatabasePath\r\n                                                                        $DatabaseList   = $DatabasePathGc|iex\r\n\r\n                                                                        # VALIDATION ARRAY LIST\r\n                                                                        $DatabaseIndex  = $DatabaseList.Count-1\r\n                                                                        $ArrayNum       = 0\r\n                                                                        $ArrayNumList   = @()\r\n                                                                        foreach ($ArrayItem in $CacheArrayList) {\r\n                                                                            if($ArrayItem -gt $DatabaseIndex){\r\n                                                                                $ArrayNumList   += $ArrayNum\r\n                                                                                $ArrayValidation = $true\r\n                                                                            }\r\n                                                                            $ArrayNum++\r\n                                                                        }\r\n                                                                        if($ArrayValidation -eq $true){\r\n                                                                            foreach ($IndexNum in $ArrayNumList) {\r\n                                                                                $CacheArrayList[$IndexNum] = $null\r\n                                                                            }\r\n                                                                            $CacheArrayList = $CacheArrayList.Where({ $null -ne $_ })\r\n                                                                        }\r\n\r\n                                                                        if($DatabaseList){\r\n                                                                            $CacheList      = @()\r\n                                                                            foreach ($Index in $CacheArrayList) {\r\n                                                                                $CacheList += $DatabaseList[$Index]\r\n                                                                            }\r\n    \r\n                                                                            $Arguments            = '[{\"Name\":\"final_item_id\",\"Type\":\"1\",\"TypeData\":\"Int\",\"Mandatory\":true},{\"Name\":\"final_item_name\",\"Type\":\"2\",\"TypeData\":\"String\",\"Mandatory\":\"True\"}]'\r\n                                                                            $ArgumentsJson        = $Arguments | ConvertFrom-Json -Depth 100\r\n                                                                            $ArgumentsXml         = $ArgumentsJson | ConvertTo-Xml\r\n                                                                            $ArgumentsItemTypeXml = $ArgumentsJson | ? {$_.Type -eq '1'} | ConvertTo-Xml\r\n                                                                            $ArgumentsXmlName     = (((($ArgumentsXml.Objects).Object).Property) | ? {$_.Name -eq 'Name'}).\"#text\"\r\n                                                                            $ArgumentsXmlIdName   = (((($ArgumentsItemTypeXml.Objects).Object).Property) | ? {$_.Name -eq 'Name'}).\"#text\" | sort -Top 1\r\n                                                                            $PreNameList = @()\r\n                                                                            foreach ($Name in $ArgumentsXmlName) {\r\n                                                                                if($PreNameList -match $Name){}\r\n                                                                                else{$PreNameList += $Name}\r\n                                                                            }\r\n                                                                            $NameList = @()\r\n                                                                            foreach ($Name in $PreNameList) {\r\n                                                                                if($ArgumentsXmlIdName -match $Name){}\r\n                                                                                else{$NameList += $Name}\r\n                                                                            }\r\n        \r\n                                                                            $ArgumentTopValue = (('$Argument_'+\"$ArgumentsXmlIdName\")|iex)\r\n        \r\n                                                                            if($ArgumentTopValue -eq '0'){\r\n                                                                                $CacheList = $CacheList\r\n                                                                                foreach ($Name in $NameList) {\r\n                                                                                    'if('+'$null'+' -ne '+('$PSBoundParameters.'+'Argument_'+\"$Name\")+')'+'{'+\r\n                                                                                        '$DatabaseSelector'+'='+'$CacheList'+'|'+'?'+'{'+'$_.'+\"$Name\"+' -match '+'$Argument_'+\"$Name\"+'}'+';'+\r\n                                                                                        '$CacheList'+'='+'$DatabaseSelector'+';'+\r\n                                                                                    '}'|iex\r\n                                                                                }\r\n                                                                            }\r\n                                                                            else{\r\n                                                                                $CacheListIndex = $ArgumentTopValue-1\r\n                                                                                $CacheList      = $CacheList[$CacheListIndex]\r\n                                                                                foreach ($Name in $NameList) {\r\n                                                                                    'if('+'$null'+' -ne '+('$PSBoundParameters.'+'Argument_'+\"$Name\")+')'+'{'+\r\n                                                                                        '$DatabaseSelector'+'='+'$CacheList'+'|'+'?'+'{'+'$_.'+\"$Name\"+' -match '+'$Argument_'+\"$Name\"+'}'+';'+\r\n                                                                                        '$CacheList'+'='+'$DatabaseSelector'+';'+\r\n                                                                                    '}'|iex\r\n                                                                                }\r\n                                                                            }                                                                        \r\n                                                                            if($CacheList){\r\n                                                                                $FunctionResult  = $CacheList|ConvertTo-Json -Depth 100\r\n                                                                            }\r\n                                                                            else{\r\n                                                                                $FunctionResult = 'null'\r\n                                                                            }\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $FunctionResult = 'null'\r\n                                                                        }\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }                                                                \r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    else{\r\n                                                        $FunctionResult = $false\r\n                                                    }\r\n                                                }                                                \r\n                                            }\r\n                                        }End{$FunctionResult}}",
  "FunctionsAdd": "function Add-PSUCA-final_table {[CmdletBinding()]Param([Parameter(Mandatory=$true,ValueFromPipelineByPropertyName)][string]$CacheMethod,[Parameter(Mandatory=$true,ValueFromPipelineByPropertyName)][string]$CacheType,[Parameter(Mandatory=$true,ValueFromPipelineByPropertyName)][string]$CachePoint,[Parameter(Mandatory=$true,ValueFromPipelineByPropertyName)][hashtable]$CacheData)Begin{[string]$CacheModelId='5b3b7d33-40ad-4925-a95d-d84a4fead21f';[string]$CacheTableId='c88fa622-9e27-42f2-94d9-92689ae5fc84';[string]$CachePSU='_c88fa622_9e27_42f2_94d9_92689ae5fc84';[string]$CacheTerminal='$Global:c88fa622_9e27_42f2_94d9_92689ae5fc84'}Process{\r\n                                            switch ($CacheMethod) {\r\n                                                'local'    {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $CachePath    = $CacheData.Path\r\n                                                                $CacheContent = $CacheData.Content\r\n                                                                $DatabaseDir  = \"$CachePath\"+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+\"$CachePoint\"+'\\'\r\n                                                                $DatabasePath = \"$CachePath\"+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+\"$CachePoint\"+'\\'+'data.db'\r\n                                                                if(Test-Path $DatabasePath){\r\n                                                                    if($CacheContent){\r\n                                                                        $AddContent     = Add-Content $DatabasePath -Value $CacheContent\r\n                                                                        $FunctionResult = $true\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    if($CacheContent){\r\n                                                                        $NewDir         = New-Item -ItemType Directory $DatabaseDir\r\n                                                                        $NewFile        = New-Item -ItemType File $DatabasePath\r\n                                                                        $AddContent     = Set-Content $DatabasePath -Value $CacheContent\r\n                                                                        $FunctionResult = $true\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $CacheArrayList = $CacheData.ArrayList\r\n                                                                $CachePath      = $CacheData.Path\r\n                                                                $CacheContent   = $CacheData.Content\r\n                                                                $DatabaseDir    = \"$CachePath\"+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+\"$CachePoint\"+'\\'\r\n                                                                $DatabasePath   = \"$CachePath\"+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+\"$CachePoint\"+'\\'+'data.db'\r\n                                                                if(Test-Path $DatabasePath){\r\n                                                                    if($null -ne $($CacheArrayList -match \"^[\\d\\.]+$\") -and (($null -eq $($CacheArrayList -match '^[A-Z]+$')) -or ($false -eq $($CacheArrayList -match '^[A-Z]+$')))){\r\n                                                                        $DatabasePathGc = gc $DatabasePath\r\n                                                                        $DatabaseList   = $DatabasePathGc|iex\r\n                                                                        if($DatabaseList){\r\n                                                                            # VALIDATION ARRAY LIST\r\n                                                                            $DatabaseIndex  = $DatabaseList.Count-1\r\n                                                                            $ArrayNum       = 0\r\n                                                                            $ArrayNumList   = @()\r\n                                                                            foreach ($ArrayItem in $CacheArrayList) {\r\n                                                                                if($ArrayItem -gt $DatabaseIndex){\r\n                                                                                    $ArrayNumList   += $ArrayNum\r\n                                                                                    $ArrayValidation = $true\r\n                                                                                }\r\n                                                                                $ArrayNum++\r\n                                                                            }\r\n                                                                            if($ArrayValidation -eq $true){\r\n                                                                                foreach ($IndexNum in $ArrayNumList) {\r\n                                                                                    $CacheArrayList[$IndexNum] = $null\r\n                                                                                }\r\n                                                                                $CacheArrayList = $CacheArrayList.Where({ $null -ne $_ })\r\n                                                                            }\r\n\r\n                                                                            $CacheList      = @()\r\n                                                                            if(($CacheArrayList).Count -eq 1 -and ($CacheContent).Count -gt 1){\r\n                                                                                $num = 0\r\n                                                                                foreach ($Database in $DatabaseList) {\r\n                                                                                    if($num -eq $CacheArrayList){\r\n                                                                                        $CacheList += $CacheContent\r\n                                                                                    }\r\n                                                                                    $CacheList += $Database\r\n                                                                                    $num++\r\n                                                                                }\r\n                                                                                $AddContent     = Set-Content $DatabasePath -Value $CacheList\r\n                                                                                $FunctionResult = $true\r\n                                                                            }\r\n                                                                            if(($CacheArrayList).Count -gt 1 -and ($CacheContent).Count -gt 1){\r\n                                                                                $num = 0\r\n                                                                                foreach ($Database in $DatabaseList) {\r\n                                                                                    if($null -ne $($CacheArrayList -like $num)){\r\n                                                                                        $CacheList += $CacheContent[$num]\r\n                                                                                    }\r\n                                                                                    $CacheList += $Database\r\n                                                                                    $num++\r\n                                                                                }\r\n                                                                                $AddContent     = Set-Content $DatabasePath -Value $CacheList\r\n                                                                                $FunctionResult = $true\r\n                                                                            }\r\n                                                                            elseif(($CacheArrayList).Count -eq 1 -and ($CacheContent).Count -eq 1){\r\n                                                                                if($CacheArrayList -eq 0){\r\n                                                                                    $SetContent     = Set-Content $DatabasePath -Value $CacheContent\r\n                                                                                    $AddContent     = Add-Content $DatabasePath -Value $DatabaseList\r\n                                                                                    $FunctionResult = $true\r\n                                                                                }\r\n                                                                                elseif($CacheArrayList -gt 0){\r\n                                                                                    $num = 0\r\n                                                                                    foreach ($Database in $DatabaseList) {\r\n                                                                                        if($num -eq $CacheArrayList){\r\n                                                                                            $CacheList += $CacheContent\r\n                                                                                        }\r\n                                                                                        $CacheList += $Database\r\n                                                                                        $num++\r\n                                                                                    }\r\n                                                                                    $AddContent     = Set-Content $DatabasePath -Value $CacheList\r\n                                                                                    $FunctionResult = $true\r\n                                                                                }\r\n                                                                                else{\r\n                                                                                    $FunctionResult = $false\r\n                                                                                }\r\n                                                                            }  \r\n                                                                            else{\r\n                                                                                $FunctionResult = $false\r\n                                                                            }\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $AddContent     = Set-Content $DatabasePath -Value $CacheContent\r\n                                                                            $FunctionResult = $true\r\n                                                                        }\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    if($CacheContent){\r\n                                                                        $NewDir         = New-Item -ItemType Directory $DatabaseDir\r\n                                                                        $NewFile        = New-Item -ItemType File $DatabasePath\r\n                                                                        $AddContent     = Add-Content $DatabasePath -Value $CacheContent\r\n                                                                        $FunctionResult = $true\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    else{\r\n                                                        $FunctionResult = $false\r\n                                                    }\r\n                                                }\r\n                                                'psu'      {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CachePSU){\r\n                                                                $ApiDataPSCO = [PSCustomObject]@{\r\n                                                                    Id        = $CachePSU\r\n                                                                    ArrayList = $CacheData.ArrayList|ConvertTo-Json -Depth 100\r\n                                                                    Content   = $CacheData.Content|ConvertTo-Json -Depth 100\r\n                                                                }\r\n                                                                $RequestData = iwr ('http://localhost:5000/'+'api/stream') -Method Post -Body (@{Token='testapiapptoken';ApiType='ADD';;ApiArg='All';ApiData=$ApiDataPSCO} | ConvertTo-Json -Depth 100) -ContentType 'application/json'\r\n                                                                if($RequestData.Content -eq 'Add'){\r\n                                                                    $FunctionResult = $true\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CachePSU){\r\n                                                                $ApiDataPSCO = [PSCustomObject]@{\r\n                                                                    Id        = $CachePSU\r\n                                                                    ArrayList = $CacheData.ArrayList|ConvertTo-Json -Depth 100\r\n                                                                    Content   = $CacheData.Content|ConvertTo-Json -Depth 100\r\n                                                                }\r\n                                                                $RequestData = iwr ('http://localhost:5000/'+'api/stream') -Method Post -Body (@{Token='testapiapptoken';ApiType='ADD';;ApiArg='Selected';ApiData=$ApiDataPSCO} | ConvertTo-Json -Depth 100) -ContentType 'application/json'\r\n                                                                if($RequestData.Content -eq 'Add'){\r\n                                                                    $FunctionResult = $true\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    else{\r\n                                                        $FunctionResult = $false\r\n                                                    }\r\n                                                }\r\n                                                'sql'      {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $Parameters = Invoke-Command {\r\n                                                                    $SqlDatabaseName  = $CacheModelId\r\n                                                                    $ConnectionString = $CacheData.ConnectionString -replace 'importdatabasename',\"$SqlDatabaseName\"\r\n                                                                    $QueryCommand     = 'SELECT'+' '+'*'+' '+'FROM'+' '+\"$CacheTableId\"\r\n                                                                    $QueryColumnName  = $CacheColumn\r\n                                                                }\r\n                                                                $StartSqlSession = Invoke-Command {\r\n                                                                    $Connection                  = New-Object System.Data.SqlClient.SqlConnection\r\n                                                                    $Connection.ConnectionString = $ConnectionString\r\n                                                                    $Connection.Open()\r\n                                                                }\r\n                                                                $NewQuery = Invoke-Command {\r\n                                                                    $Query               = “$global:queryString\"\r\n                                                                    $Command             = $Connection.CreateCommand()\r\n                                                                    $Command.CommandText = $Query\r\n                                                                    $SqlDataReader       = $Command.ExecuteReader()\r\n                                                                    #Fetch data and write out to files\r\n                                                                    while ($SqlDataReader.Read()) {\r\n                                                                        Write-Output $SqlDataReader[$QueryColumn];\r\n                                                                    }\r\n                                                                }\r\n                                                                $CloseSession = Invoke-Command {\r\n                                                                    $Connection.Close()\r\n                                                                    $Connection.Dispose()\r\n                                                                }\r\n                                                                switch (1,2,3,4,5,6){\r\n                                                                    1{$Param       = $Parameters      }\r\n                                                                    2{$Start       = $StartSqlSession }\r\n                                                                    3{$QueryString = $QueryCommand    }\r\n                                                                    4{$QueryColumn = $QueryColumnName }\r\n                                                                    5{$QueryResult = $NewQuery        }\r\n                                                                    6{$Close       = $CloseSqlSession }\r\n                                                                }\r\n                                                                $FunctionResult = $QueryResult\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $Parameters = Invoke-Command {\r\n                                                                    $SqlDatabaseName  = $CacheModelId\r\n                                                                    $ConnectionString = $CacheData.ConnectionString -replace 'importdatabasename',\"$SqlDatabaseName\"\r\n                                                                    $QueryCommand     = 'SELECT'+' '+\"'\"+\"$CacheValue\"+\"'\"+' '+'FROM'+' '+\"$CacheTableId\"\r\n                                                                    $QueryColumnName  = $CacheColumn\r\n                                                                }\r\n                                                                $StartSqlSession = Invoke-Command {\r\n                                                                    $Connection                  = New-Object System.Data.SqlClient.SqlConnection\r\n                                                                    $Connection.ConnectionString = $ConnectionString\r\n                                                                    $Connection.Open()\r\n                                                                }\r\n                                                                $NewQuery = Invoke-Command {\r\n                                                                    $Query               = “$global:queryString\"\r\n                                                                    $Command             = $Connection.CreateCommand()\r\n                                                                    $Command.CommandText = $Query\r\n                                                                    $SqlDataReader       = $Command.ExecuteReader()\r\n                                                                    #Fetch data and write out to files\r\n                                                                    while ($SqlDataReader.Read()) {\r\n                                                                        Write-Output $SqlDataReader[$QueryColumn];\r\n                                                                    }\r\n                                                                }\r\n                                                                $CloseSession = Invoke-Command {\r\n                                                                    $Connection.Close()\r\n                                                                    $Connection.Dispose()\r\n                                                                }\r\n                                                                switch (1,2,3,4,5,6){\r\n                                                                    1{$Param       = $Parameters      }\r\n                                                                    2{$Start       = $StartSqlSession }\r\n                                                                    3{$QueryString = $QueryCommand    }\r\n                                                                    4{$QueryColumn = $QueryColumnName }\r\n                                                                    5{$QueryResult = $NewQuery        }\r\n                                                                    6{$Close       = $CloseSqlSession }\r\n                                                                }\r\n                                                                $FunctionResult = $QueryResult\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                'terminal' {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $RepositoryPath   = $CacheTerminal|iex\r\n                                                                $DatabaseList     = $RepositoryPath\r\n                                                                $CacheContent     = $CacheData.Content\r\n                                                                $CacheList        = @()\r\n                                                                $CacheList       += $DatabaseList\r\n                                                                $CacheList       += $CacheContent\r\n                                                                $ImportToDatabase = (\"$CacheTerminal\"+'='+'$'+'CacheList')|iex\r\n                                                                $FunctionResult = $true\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $RepositoryPath   = $CacheTerminal|iex\r\n                                                                $DatabaseList     = $RepositoryPath\r\n                                                                $CacheArrayList   = $CacheData.ArrayList\r\n                                                                $CacheContent     = $CacheData.Content\r\n                                                                if($null -ne $($CacheArrayList -match \"^[\\d\\.]+$\") -and (($null -eq $($CacheArrayList -match '^[A-Z]+$')) -or ($false -eq $($CacheArrayList -match '^[A-Z]+$')))){\r\n                                                                    if($DatabaseList){\r\n                                                                        # VALIDATION ARRAY LIST\r\n                                                                        $DatabaseIndex  = $DatabaseList.Count-1\r\n                                                                        $ArrayNum       = 0\r\n                                                                        $ArrayNumList   = @()\r\n                                                                        foreach ($ArrayItem in $CacheArrayList) {\r\n                                                                            if($ArrayItem -gt $DatabaseIndex){\r\n                                                                                $ArrayNumList   += $ArrayNum\r\n                                                                                $ArrayValidation = $true\r\n                                                                            }\r\n                                                                            $ArrayNum++\r\n                                                                        }\r\n                                                                        if($ArrayValidation -eq $true){\r\n                                                                            foreach ($IndexNum in $ArrayNumList) {\r\n                                                                                $CacheArrayList[$IndexNum] = $null\r\n                                                                            }\r\n                                                                            $CacheArrayList = $CacheArrayList.Where({ $null -ne $_ })\r\n                                                                        }\r\n\r\n                                                                        $CacheList = @()\r\n                                                                        if(($CacheArrayList).Count -eq 1 -and ($CacheContent).Count -gt 1){\r\n                                                                            $num = 0\r\n                                                                            foreach ($Database in $DatabaseList) {\r\n                                                                                if($num -eq $CacheArrayList){\r\n                                                                                    $CacheList += $CacheContent\r\n                                                                                }\r\n                                                                                $CacheList += $Database\r\n                                                                                $num++\r\n                                                                            }\r\n                                                                            $ImportToDatabase = (\"$CacheTerminal\"+'='+'$'+'CacheList')|iex\r\n                                                                            $FunctionResult = $true\r\n                                                                        }\r\n                                                                        elseif(($CacheArrayList).Count -gt 1 -and ($CacheContent).Count -gt 1){\r\n                                                                            $CacheContentJson = $CacheContent\r\n                                                                            $num = 0\r\n                                                                            foreach ($Database in $DatabaseList) {\r\n                                                                                if($null -ne $($CacheArrayList -like $num)){\r\n                                                                                    $CacheList += $CacheContentJson[$num]\r\n                                                                                }\r\n                                                                                $CacheList += $Database\r\n                                                                                $num++\r\n                                                                            }\r\n                                                                            $ImportToDatabase = (\"$CacheTerminal\"+'='+'$'+'CacheList')|iex\r\n                                                                            $FunctionResult = $true\r\n                                                                        }\r\n                                                                        elseif(($CacheArrayList).Count -eq 1 -and ($CacheContent).Count -eq 1){\r\n                                                                            if($CacheArrayList -eq 0){\r\n                                                                                $CacheList += $CacheContent\r\n                                                                                $CacheList += $DatabaseList\r\n                                                                                $ImportToDatabase = (\"$CacheTerminal\"+'='+'$'+'CacheList')|iex\r\n                                                                                $FunctionResult = $true\r\n                                                                            }\r\n                                                                            elseif($CacheArrayList -gt 0){\r\n                                                                                $num = 0\r\n                                                                                foreach ($Database in $DatabaseList) {\r\n                                                                                    if($num -eq $CacheArrayList){\r\n                                                                                        $CacheList += $CacheContent\r\n                                                                                    }\r\n                                                                                    $CacheList += $Database\r\n                                                                                    $num++\r\n                                                                                }\r\n                                                                                $ImportToDatabase = (\"$CacheTerminal\"+'='+'$'+'CacheList')|iex\r\n                                                                                $FunctionResult = $true\r\n                                                                            }\r\n                                                                            else{\r\n                                                                                $FunctionResult = $false\r\n                                                                            }\r\n                                                                        }  \r\n                                                                        else{\r\n                                                                            'error'\r\n                                                                        }\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $ImportToDatabase = (\"$CacheTerminal\"+'='+'$'+'CacheContent')|iex\r\n                                                                        $FunctionResult = $true\r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    'error'\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                'error'\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            'error'\r\n                                                        }\r\n                                                    }\r\n                                                    else{\r\n                                                        'error'\r\n                                                    }\r\n                                                }\r\n                                                'terminal-cachefile' {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $CachePath    = $CacheData.Path\r\n                                                                $CacheContent = $CacheData.Content\r\n                                                                $DatabaseDir  = \"$CachePath\"+\"$CachePoint\"+'\\'+'cache'+'\\'+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'\r\n                                                                $DatabasePath = \"$CachePath\"+\"$CachePoint\"+'\\'+'cache'+'\\'+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+'data.db'\r\n                                                                if(Test-Path $DatabasePath){\r\n                                                                    if($CacheContent){\r\n                                                                        $AddContent     = Add-Content $DatabasePath -Value $CacheContent\r\n                                                                        $FunctionResult = $true\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    if($CacheContent){\r\n                                                                        $NewDir         = New-Item -ItemType Directory $DatabaseDir\r\n                                                                        $NewFile        = New-Item -ItemType File $DatabasePath\r\n                                                                        $AddContent     = Set-Content $DatabasePath -Value $CacheContent\r\n                                                                        $FunctionResult = $true\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $CacheArrayList = $CacheData.ArrayList\r\n                                                                $CachePath      = $CacheData.Path\r\n                                                                $CacheContent   = $CacheData.Content\r\n                                                                $DatabaseDir    = \"$CachePath\"+\"$CachePoint\"+'\\'+'cache'+'\\'+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'\r\n                                                                $DatabasePath   = \"$CachePath\"+\"$CachePoint\"+'\\'+'cache'+'\\'+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+'data.db'\r\n                                                                if(Test-Path $DatabasePath){\r\n                                                                    if($null -ne $($CacheArrayList -match \"^[\\d\\.]+$\") -and (($null -eq $($CacheArrayList -match '^[A-Z]+$')) -or ($false -eq $($CacheArrayList -match '^[A-Z]+$')))){\r\n                                                                        $DatabasePathGc = gc $DatabasePath\r\n                                                                        $DatabaseList   = $DatabasePathGc|iex\r\n                                                                        if($DatabaseList){\r\n                                                                            # VALIDATION ARRAY LIST\r\n                                                                            $DatabaseIndex  = $DatabaseList.Count-1\r\n                                                                            $ArrayNum       = 0\r\n                                                                            $ArrayNumList   = @()\r\n                                                                            foreach ($ArrayItem in $CacheArrayList) {\r\n                                                                                if($ArrayItem -gt $DatabaseIndex){\r\n                                                                                    $ArrayNumList   += $ArrayNum\r\n                                                                                    $ArrayValidation = $true\r\n                                                                                }\r\n                                                                                $ArrayNum++\r\n                                                                            }\r\n                                                                            if($ArrayValidation -eq $true){\r\n                                                                                foreach ($IndexNum in $ArrayNumList) {\r\n                                                                                    $CacheArrayList[$IndexNum] = $null\r\n                                                                                }\r\n                                                                                $CacheArrayList = $CacheArrayList.Where({ $null -ne $_ })\r\n                                                                            }\r\n\r\n                                                                            $CacheList      = @()\r\n                                                                            if(($CacheArrayList).Count -eq 1 -and ($CacheContent).Count -gt 1){\r\n                                                                                $num = 0\r\n                                                                                foreach ($Database in $DatabaseList) {\r\n                                                                                    if($num -eq $CacheArrayList){\r\n                                                                                        $CacheList += $CacheContent\r\n                                                                                    }\r\n                                                                                    $CacheList += $Database\r\n                                                                                    $num++\r\n                                                                                }\r\n                                                                                $AddContent     = Set-Content $DatabasePath -Value $CacheList\r\n                                                                                $FunctionResult = $true\r\n                                                                            }\r\n                                                                            if(($CacheArrayList).Count -gt 1 -and ($CacheContent).Count -gt 1){\r\n                                                                                $num = 0\r\n                                                                                foreach ($Database in $DatabaseList) {\r\n                                                                                    if($null -ne $($CacheArrayList -like $num)){\r\n                                                                                        $CacheList += $CacheContent[$num]\r\n                                                                                    }\r\n                                                                                    $CacheList += $Database\r\n                                                                                    $num++\r\n                                                                                }\r\n                                                                                $AddContent     = Set-Content $DatabasePath -Value $CacheList\r\n                                                                                $FunctionResult = $true\r\n                                                                            }\r\n                                                                            elseif(($CacheArrayList).Count -eq 1 -and ($CacheContent).Count -eq 1){\r\n                                                                                if($CacheArrayList -eq 0){\r\n                                                                                    $SetContent     = Set-Content $DatabasePath -Value $CacheContent\r\n                                                                                    $AddContent     = Add-Content $DatabasePath -Value $DatabaseList\r\n                                                                                    $FunctionResult = $true\r\n                                                                                }\r\n                                                                                elseif($CacheArrayList -gt 0){\r\n                                                                                    $num = 0\r\n                                                                                    foreach ($Database in $DatabaseList) {\r\n                                                                                        if($num -eq $CacheArrayList){\r\n                                                                                            $CacheList += $CacheContent\r\n                                                                                        }\r\n                                                                                        $CacheList += $Database\r\n                                                                                        $num++\r\n                                                                                    }\r\n                                                                                    $AddContent     = Set-Content $DatabasePath -Value $CacheList\r\n                                                                                    $FunctionResult = $true\r\n                                                                                }\r\n                                                                                else{\r\n                                                                                    $FunctionResult = $false\r\n                                                                                }\r\n                                                                            }  \r\n                                                                            else{\r\n                                                                                $FunctionResult = $false\r\n                                                                            }\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $AddContent     = Set-Content $DatabasePath -Value $CacheContent\r\n                                                                            $FunctionResult = $true\r\n                                                                        }\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    if($CacheContent){\r\n                                                                        $NewDir         = New-Item -ItemType Directory $DatabaseDir\r\n                                                                        $NewFile        = New-Item -ItemType File $DatabasePath\r\n                                                                        $AddContent     = Add-Content $DatabasePath -Value $CacheContent\r\n                                                                        $FunctionResult = $true\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    else{\r\n                                                        $FunctionResult = $false\r\n                                                    }\r\n                                                }                                                \r\n                                            }\r\n                                        }End{$FunctionResult}}",
  "FunctionsDelete": "function Delete-PSUCA-final_table {[CmdletBinding()]Param([Parameter(Mandatory=$true,ValueFromPipelineByPropertyName)][string]$CacheMethod,[Parameter(Mandatory=$true,ValueFromPipelineByPropertyName)][string]$CacheType,[Parameter(Mandatory=$true,ValueFromPipelineByPropertyName)][string]$CachePoint,[Parameter(Mandatory=$true,ValueFromPipelineByPropertyName)][hashtable]$CacheData)Begin{[string]$CacheModelId='5b3b7d33-40ad-4925-a95d-d84a4fead21f';[string]$CacheTableId='c88fa622-9e27-42f2-94d9-92689ae5fc84';[string]$CachePSU='_c88fa622_9e27_42f2_94d9_92689ae5fc84';[string]$CacheTerminal='$Global:c88fa622_9e27_42f2_94d9_92689ae5fc84'}Process{\r\n                                            switch ($CacheMethod) {\r\n                                                'local'    {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $CachePath    = $CacheData.Path\r\n                                                                $DatabasePath = \"$CachePath\"+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+\"$CachePoint\"+'\\'+'data.db'\r\n                                                                if(Test-Path $DatabasePath){\r\n                                                                    $Delete = Set-Content $DatabasePath -Value $null\r\n                                                                    $FunctionResult = $true\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $CacheArrayList = $CacheData.ArrayList\r\n                                                                $CachePath      = $CacheData.Path\r\n                                                                $DatabasePath   = \"$CachePath\"+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+\"$CachePoint\"+'\\'+'data.db'\r\n                                                                if(Test-Path $DatabasePath){\r\n                                                                    if($null -ne $($CacheArrayList -match \"^[\\d\\.]+$\") -and (($null -eq $($CacheArrayList -match '^[A-Z]+$')) -or ($false -eq $($CacheArrayList -match '^[A-Z]+$')))){\r\n                                                                        $DatabasePathGc = gc $DatabasePath\r\n                                                                        $DatabaseList   = $DatabasePathGc|iex\r\n                                                                        if($DatabaseList){\r\n                                                                            # VALIDATION ARRAY LIST\r\n                                                                            $DatabaseIndex  = $DatabaseList.Count-1\r\n                                                                            $ArrayNum       = 0\r\n                                                                            $ArrayNumList   = @()\r\n                                                                            foreach ($ArrayItem in $CacheArrayList) {\r\n                                                                                if($ArrayItem -gt $DatabaseIndex){\r\n                                                                                    $ArrayNumList   += $ArrayNum\r\n                                                                                    $ArrayValidation = $true\r\n                                                                                }\r\n                                                                                $ArrayNum++\r\n                                                                            }\r\n                                                                            if($ArrayValidation -eq $true){\r\n                                                                                foreach ($IndexNum in $ArrayNumList) {\r\n                                                                                    $CacheArrayList[$IndexNum] = $null\r\n                                                                                }\r\n                                                                                $CacheArrayList = $CacheArrayList.Where({ $null -ne $_ })\r\n                                                                            }\r\n\r\n                                                                            if(($CacheArrayList).Count -eq 1){\r\n                                                                                ($DatabaseList[$CCacheArrayList]) = $null\r\n                                                                                $DatabaseList   = $DatabaseList.Where({ $null -ne $_ })\r\n                                                                                $Delete         = Set-Content $DatabasePath -Value $DatabaseList\r\n                                                                                $FunctionResult = $true\r\n                                                                            }\r\n                                                                            elseif(($CacheArrayList).Count -gt 1){\r\n                                                                                foreach ($Index in $CacheArrayList) {\r\n                                                                                    ($DatabaseList[$Index]) = $null\r\n                                                                                }\r\n                                                                                $DatabaseList   = $DatabaseList.Where({ $null -ne $_ })\r\n                                                                                $Delete         = Set-Content $DatabasePath -Value $DatabaseList\r\n                                                                                $FunctionResult = $true\r\n                                                                            }\r\n                                                                            else{\r\n                                                                                $FunctionResult = $false\r\n                                                                            }\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $FunctionResult = $true\r\n                                                                        }\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    else{\r\n                                                        $FunctionResult = $false\r\n                                                    }\r\n                                                }\r\n                                                'psu'      {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CachePSU){\r\n                                                                $ApiDataPSCO = [PSCustomObject]@{\r\n                                                                    Id        = $CachePSU\r\n                                                                    ArrayList = $null\r\n                                                                    Content   = $null\r\n                                                                }\r\n                                                                $RequestData = iwr ('http://localhost:5000/'+'api/stream') -Method Post -Body (@{Token='testapiapptoken';ApiType='DELETE';ApiArg='All';ApiData=$ApiDataPSCO} | ConvertTo-Json -Depth 100) -ContentType 'application/json'\r\n                                                                if($RequestData.Content -eq 'Delete'){\r\n                                                                    $FunctionResult = $true\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CachePSU){\r\n                                                                $ApiDataPSCO = [PSCustomObject]@{\r\n                                                                    Id        = $CachePSU\r\n                                                                    ArrayList = $CacheData.ArrayList|ConvertTo-Json -Depth 100\r\n                                                                    Content   = $null\r\n                                                                }\r\n                                                                $RequestData = iwr ('http://localhost:5000/'+'api/stream') -Method Post -Body (@{Token='testapiapptoken';ApiType='DELETE';ApiArg='Selected';ApiData=$ApiDataPSCO} | ConvertTo-Json -Depth 100) -ContentType 'application/json'\r\n                                                                if($RequestData.Content -eq 'Delete'){\r\n                                                                    $FunctionResult = $true\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    else{\r\n                                                        $FunctionResult = $false\r\n                                                    }\r\n                                                }\r\n                                                'sql'      {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                'terminal' {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $Delete     = (\"$CacheTerminal\"+'='+'$'+'null')|iex\r\n                                                                $DeleteData = $CacheTerminal|iex\r\n                                                                if($null -eq $DeleteData){\r\n                                                                    $FunctionResult = $true\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $DatabasePath = $CacheTerminal|iex\r\n                                                                $CacheArrayList   = $CacheData.ArrayList\r\n                                                                if($null -ne $($CacheArrayList -match \"^[\\d\\.]+$\") -and (($null -eq $($CacheArrayList -match '^[A-Z]+$')) -or ($false -eq $($CacheArrayList -match '^[A-Z]+$')))){\r\n                                                                    $DatabaseList = $DatabasePath\r\n                                                                    if($DatabaseList){\r\n                                                                        # VALIDATION ARRAY LIST\r\n                                                                        $DatabaseIndex  = $DatabaseList.Count-1\r\n                                                                        $ArrayNum       = 0\r\n                                                                        $ArrayNumList   = @()\r\n                                                                        foreach ($ArrayItem in $CacheArrayList) {\r\n                                                                            if($ArrayItem -gt $DatabaseIndex){\r\n                                                                                $ArrayNumList   += $ArrayNum\r\n                                                                                $ArrayValidation = $true\r\n                                                                            }\r\n                                                                            $ArrayNum++\r\n                                                                        }\r\n                                                                        if($ArrayValidation -eq $true){\r\n                                                                            foreach ($IndexNum in $ArrayNumList) {\r\n                                                                                $CacheArrayList[$IndexNum] = $null\r\n                                                                            }\r\n                                                                            $CacheArrayList = $CacheArrayList.Where({ $null -ne $_ })\r\n                                                                        }\r\n\r\n                                                                        if(($CacheArrayList).Count -eq 1){\r\n                                                                            ($DatabaseList[$CacheArrayList]) = $null\r\n                                                                            $DatabaseList   = $DatabaseList.Where({ $null -ne $_ })\r\n                                                                            $Delete         = (\"$CacheTerminal\"+'='+'$'+'DatabaseList')|iex\r\n                                                                            $FunctionResult = $true\r\n                                                                        }\r\n                                                                        elseif(($CacheArrayList).Count -gt 1){\r\n                                                                            foreach ($Index in $CacheArrayList) {\r\n                                                                                ($DatabaseList[$Index]) = $null\r\n                                                                            }\r\n                                                                            $DatabaseList   = $DatabaseList.Where({ $null -ne $_ })\r\n                                                                            $Delete         = (\"$CacheTerminal\"+'='+'$'+'DatabaseList')|iex\r\n                                                                            $FunctionResult = $true\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $FunctionResult = $false\r\n                                                                        }\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $true\r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    else{\r\n                                                        $FunctionResult = $false\r\n                                                    }\r\n                                                }\r\n                                                'terminal-cachefile' {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $CachePath    = $CacheData.Path\r\n                                                                $DatabasePath = \"$CachePath\"+\"$CachePoint\"+'\\'+'cache'+'\\'+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+'data.db'\r\n                                                                if(Test-Path $DatabasePath){\r\n                                                                    $Delete = Set-Content $DatabasePath -Value $null\r\n                                                                    $FunctionResult = $true\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $CacheArrayList = $CacheData.ArrayList\r\n                                                                $CachePath      = $CacheData.Path\r\n                                                                $DatabasePath   = \"$CachePath\"+\"$CachePoint\"+'\\'+'cache'+'\\'+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+'data.db'\r\n                                                                if(Test-Path $DatabasePath){\r\n                                                                    if($null -ne $($CacheArrayList -match \"^[\\d\\.]+$\") -and (($null -eq $($CacheArrayList -match '^[A-Z]+$')) -or ($false -eq $($CacheArrayList -match '^[A-Z]+$')))){\r\n                                                                        $DatabasePathGc = gc $DatabasePath\r\n                                                                        $DatabaseList   = $DatabasePathGc|iex\r\n                                                                        if($DatabaseList){\r\n                                                                            # VALIDATION ARRAY LIST\r\n                                                                            $DatabaseIndex  = $DatabaseList.Count-1\r\n                                                                            $ArrayNum       = 0\r\n                                                                            $ArrayNumList   = @()\r\n                                                                            foreach ($ArrayItem in $CacheArrayList) {\r\n                                                                                if($ArrayItem -gt $DatabaseIndex){\r\n                                                                                    $ArrayNumList   += $ArrayNum\r\n                                                                                    $ArrayValidation = $true\r\n                                                                                }\r\n                                                                                $ArrayNum++\r\n                                                                            }\r\n                                                                            if($ArrayValidation -eq $true){\r\n                                                                                foreach ($IndexNum in $ArrayNumList) {\r\n                                                                                    $CacheArrayList[$IndexNum] = $null\r\n                                                                                }\r\n                                                                                $CacheArrayList = $CacheArrayList.Where({ $null -ne $_ })\r\n                                                                            }\r\n\r\n                                                                            if(($CacheArrayList).Count -eq 1){\r\n                                                                                ($DatabaseList[$CCacheArrayList]) = $null\r\n                                                                                $DatabaseList   = $DatabaseList.Where({ $null -ne $_ })\r\n                                                                                $Delete         = Set-Content $DatabasePath -Value $DatabaseList\r\n                                                                                $FunctionResult = $true\r\n                                                                            }\r\n                                                                            elseif(($CacheArrayList).Count -gt 1){\r\n                                                                                foreach ($Index in $CacheArrayList) {\r\n                                                                                    ($DatabaseList[$Index]) = $null\r\n                                                                                }\r\n                                                                                $DatabaseList   = $DatabaseList.Where({ $null -ne $_ })\r\n                                                                                $Delete         = Set-Content $DatabasePath -Value $DatabaseList\r\n                                                                                $FunctionResult = $true\r\n                                                                            }\r\n                                                                            else{\r\n                                                                                $FunctionResult = $false\r\n                                                                            }\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $FunctionResult = $true\r\n                                                                        }\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    else{\r\n                                                        $FunctionResult = $false\r\n                                                    }\r\n                                                }                                                \r\n                                            }\r\n                                        }End{$FunctionResult}}",
  "FunctionsUpdate": "function Update-PSUCA-final_table {[CmdletBinding()]Param([Parameter(Mandatory=$true,ValueFromPipelineByPropertyName)][string]$CacheMethod,[Parameter(Mandatory=$true,ValueFromPipelineByPropertyName)][string]$CacheType,[Parameter(Mandatory=$true,ValueFromPipelineByPropertyName)][string]$CachePoint,[Parameter(Mandatory=$true,ValueFromPipelineByPropertyName)][hashtable]$CacheData)Begin{[string]$CacheModelId='5b3b7d33-40ad-4925-a95d-d84a4fead21f';[string]$CacheTableId='c88fa622-9e27-42f2-94d9-92689ae5fc84';[string]$CachePSU='_c88fa622_9e27_42f2_94d9_92689ae5fc84';[string]$CacheTerminal='$Global:c88fa622_9e27_42f2_94d9_92689ae5fc84'}Process{\r\n                                            switch ($CacheMethod) {\r\n                                                'local'    {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $CachePath    = $CacheData.Path\r\n                                                                $CacheContent = $CacheData.Content\r\n                                                                $DatabaseDir  = \"$CachePath\"+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+\"$CachePoint\"+'\\'\r\n                                                                $DatabasePath = \"$CachePath\"+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+\"$CachePoint\"+'\\'+'data.db'\r\n                                                                if(Test-Path $DatabasePath){\r\n                                                                    if($CacheContent){\r\n                                                                        $UpdateContent  = Set-Content $DatabasePath -Value $CacheContent\r\n                                                                        $FunctionResult = $true\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    if($CacheContent){\r\n                                                                        $NewDir         = New-Item -ItemType Directory $DatabaseDir\r\n                                                                        $NewFile        = New-Item -ItemType File $DatabasePath\r\n                                                                        $UpdateContent  = Set-Content $DatabasePath -Value $CacheContent\r\n                                                                        $FunctionResult = $true\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $CacheArrayList = $CacheData.ArrayList\r\n                                                                $CachePath      = $CacheData.Path\r\n                                                                $CacheContent   = $CacheData.Content\r\n                                                                $DatabaseDir    = \"$CachePath\"+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+\"$CachePoint\"+'\\'\r\n                                                                $DatabasePath   = \"$CachePath\"+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+\"$CachePoint\"+'\\'+'data.db'\r\n                                                                if(Test-Path $DatabasePath){\r\n                                                                    if($null -ne $($CacheArrayList -match \"^[\\d\\.]+$\") -and (($null -eq $($CacheArrayList -match '^[A-Z]+$')) -or ($false -eq $($CacheArrayList -match '^[A-Z]+$')))){\r\n                                                                        $DatabasePathGc = gc $DatabasePath\r\n                                                                        $DatabaseList   = $DatabasePathGc|iex\r\n\r\n                                                                        if($DatabaseList){\r\n                                                                            # VALIDATION ARRAY LIST\r\n                                                                            $DatabaseIndex  = $DatabaseList.Count-1\r\n                                                                            $ArrayNum       = 0\r\n                                                                            $ArrayNumList   = @()\r\n                                                                            foreach ($ArrayItem in $CacheArrayList) {\r\n                                                                                if($ArrayItem -gt $DatabaseIndex){\r\n                                                                                    $ArrayNumList   += $ArrayNum\r\n                                                                                    $ArrayValidation = $true\r\n                                                                                }\r\n                                                                                $ArrayNum++\r\n                                                                            }\r\n                                                                            if($ArrayValidation -eq $true){\r\n                                                                                foreach ($IndexNum in $ArrayNumList) {\r\n                                                                                    $CacheArrayList[$IndexNum] = $null\r\n                                                                                }\r\n                                                                                $CacheArrayList = $CacheArrayList.Where({ $null -ne $_ })\r\n                                                                            }\r\n\r\n                                                                            if(($CacheArrayList).Count -eq 1 -and ($CacheContent).Count -gt 1){\r\n                                                                                $DatabaseList[$CacheArrayList] = $CacheContent\r\n                                                                                $UpdateContent  = Set-Content $DatabasePath -Value $DatabaseList\r\n                                                                                $FunctionResult = $true\r\n                                                                            }\r\n                                                                            if(($CacheArrayList).Count -gt 1 -and ($CacheContent).Count -gt 1){\r\n                                                                                $num = 0\r\n                                                                                foreach ($Index in $CacheArrayList) {\r\n                                                                                    $DatabaseList[$Index] = $CacheContent[$num]\r\n                                                                                    $num++\r\n                                                                                }\r\n                                                                                $UpdateContent  = Set-Content $DatabasePath -Value $DatabaseList\r\n                                                                                $FunctionResult = $true\r\n                                                                            }\r\n                                                                            elseif(($CacheArrayList).Count -eq 1 -and ($CacheContent).Count -eq 1){\r\n                                                                                if($CacheArrayList -eq 0){\r\n                                                                                    $DatabaseList[$CacheArrayList] = $CacheContent\r\n                                                                                    $UpdateContent  = Set-Content $DatabasePath -Value $DatabaseList\r\n                                                                                    $FunctionResult = $true\r\n                                                                                }\r\n                                                                                elseif($CacheArrayList -gt 0){\r\n                                                                                    $DatabaseList[$CacheArrayList] = $CacheContent\r\n                                                                                    $UpdateContent  = Set-Content $DatabasePath -Value $DatabaseList\r\n                                                                                    $FunctionResult = $true\r\n                                                                                }\r\n                                                                                else{\r\n                                                                                    $FunctionResult = $false\r\n                                                                                }\r\n                                                                            }  \r\n                                                                            else{\r\n                                                                                $FunctionResult = $false\r\n                                                                            }\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $UpdateContent  = Set-Content $DatabasePath -Value $CacheContent\r\n                                                                            $FunctionResult = $true\r\n                                                                        }\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                    $FunctionResult = $DatabaseList\r\n                                                                }\r\n                                                                else{\r\n                                                                    if($CacheContent){\r\n                                                                        $NewDir         = New-Item -ItemType Directory $DatabaseDir\r\n                                                                        $NewFile        = New-Item -ItemType File $DatabasePath\r\n                                                                        $UpdateContent  = Set-Content $DatabasePath -Value $CacheContent\r\n                                                                        $FunctionResult = $true\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    else{\r\n                                                        $FunctionResult = $false\r\n                                                    }\r\n                                                }\r\n                                                'psu'      {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CachePSU){\r\n                                                                $ApiDataPSCO = [PSCustomObject]@{\r\n                                                                    Id        = $CachePSU\r\n                                                                    ArrayList = $CacheData.ArrayList|ConvertTo-Json -Depth 100\r\n                                                                    Content   = $CacheData.Content|ConvertTo-Json -Depth 100\r\n                                                                }\r\n                                                                $RequestData = iwr ('http://localhost:5000/'+'api/stream') -Method Post -Body (@{Token='testapiapptoken';ApiType='UPDATE';ApiArg='All';ApiData=$ApiDataPSCO} | ConvertTo-Json -Depth 100) -ContentType 'application/json'\r\n                                                                if($RequestData.Content -eq 'Update'){\r\n                                                                    $FunctionResult = $true\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CachePSU){\r\n                                                                $ApiDataPSCO = [PSCustomObject]@{\r\n                                                                    Id        = $CachePSU\r\n                                                                    ArrayList = $CacheData.ArrayList|ConvertTo-Json -Depth 100\r\n                                                                    Content   = $CacheData.Content|ConvertTo-Json -Depth 100\r\n                                                                }\r\n                                                                $RequestData = iwr ('http://localhost:5000/'+'api/stream') -Method Post -Body (@{Token='testapiapptoken';ApiType='UPDATE';ApiArg='Selected';ApiData=$ApiDataPSCO} | ConvertTo-Json -Depth 100) -ContentType 'application/json'\r\n                                                                if($RequestData.Content -eq 'Update'){\r\n                                                                    $FunctionResult = $true\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    else{\r\n                                                        $FunctionResult = $false\r\n                                                    }\r\n                                                }\r\n                                                'sql'      {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n\r\n                                                            }\r\n                                                        }\r\n                                                    }\r\n                                                }\r\n                                                'terminal' {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                if($CacheData){\r\n                                                                    $UpdateContent = $CacheData.Content\r\n                                                                    $Update        = (\"$CacheTerminal\"+'='+'$'+'UpdateContent')|iex\r\n                                                                    $FunctionResult = $true\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $CacheArrayList = $CacheData.ArrayList\r\n                                                                $CacheContent   = $CacheData.Content\r\n                                                                if($CacheArrayList -and $CacheContent){\r\n                                                                    if($null -ne $($CacheArrayList -match \"^[\\d\\.]+$\") -and (($null -eq $($CacheArrayList -match '^[A-Z]+$')) -or ($false -eq $($CacheArrayList -match '^[A-Z]+$')))){\r\n                                                                        $DatabaseList = $CacheTerminal|iex\r\n\r\n                                                                        # VALIDATION ARRAY LIST\r\n                                                                        $DatabaseIndex  = $DatabaseList.Count-1\r\n                                                                        $ArrayNum       = 0\r\n                                                                        $ArrayNumList   = @()\r\n                                                                        foreach ($ArrayItem in $CacheArrayList) {\r\n                                                                            if($ArrayItem -gt $DatabaseIndex){\r\n                                                                                $ArrayNumList   += $ArrayNum\r\n                                                                                $ArrayValidation = $true\r\n                                                                            }\r\n                                                                            $ArrayNum++\r\n                                                                        }\r\n                                                                        if($ArrayValidation -eq $true){\r\n                                                                            foreach ($IndexNum in $ArrayNumList) {\r\n                                                                                $CacheArrayList[$IndexNum] = $null\r\n                                                                            }\r\n                                                                            $CacheArrayList = $CacheArrayList.Where({ $null -ne $_ })\r\n                                                                        }\r\n\r\n                                                                        if($DatabaseList){\r\n                                                                            if(($CacheArrayList).Count -eq 1 -and ($CacheContent).Count -gt 1){\r\n                                                                                ($DatabaseList[$CacheArrayList]) = $CacheContent\r\n                                                                                $Update = (\"$CacheTerminal\"+'='+'$'+'DatabaseList')|iex\r\n                                                                                $FunctionResult = $true\r\n                                                                            }\r\n                                                                            elseif(($CacheArrayList).Count -gt 1 -and ($CacheContent).Count -gt 1){\r\n                                                                                $num = 0\r\n                                                                                foreach ($Index in $CacheArrayList) {\r\n                                                                                    ($DatabaseList[$Index]) = ($CacheContent)[$num]\r\n                                                                                    $num++\r\n                                                                                }\r\n                                                                                $Update = (\"$CacheTerminal\"+'='+'$'+'DatabaseList')|iex\r\n                                                                                $FunctionResult = $true\r\n                                                                            }\r\n                                                                            elseif(($CacheArrayList).Count -eq 1 -and ($CacheContent).Count -eq 1){\r\n                                                                                ($DatabaseList[$CacheArrayList]) = $CacheContent\r\n                                                                                $Update = (\"$CacheTerminal\"+'='+'$'+'DatabaseList')|iex\r\n                                                                                $FunctionResult = $true\r\n                                                                            }  \r\n                                                                            else{\r\n                                                                                $FunctionResult = $false\r\n                                                                            }\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $Update = (\"$CacheTerminal\"+'='+'$'+'CacheContent')|iex\r\n                                                                            $FunctionResult = $true\r\n                                                                        }\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    $FunctionResult = $false\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    else{\r\n                                                        $FunctionResult = $false\r\n                                                    }\r\n                                                }\r\n                                                'terminal-cachefile' {\r\n                                                    if($CacheType -eq 'All'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $CachePath    = $CacheData.Path\r\n                                                                $CacheContent = $CacheData.Content\r\n                                                                $DatabaseDir  = \"$CachePath\"+\"$CachePoint\"+'\\'+'cache'+'\\'+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'\r\n                                                                $DatabasePath = \"$CachePath\"+\"$CachePoint\"+'\\'+'cache'+'\\'+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+'data.db'\r\n                                                                if(Test-Path $DatabasePath){\r\n                                                                    if($CacheContent){\r\n                                                                        $UpdateContent  = Set-Content $DatabasePath -Value $CacheContent\r\n                                                                        $FunctionResult = $true\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                }\r\n                                                                else{\r\n                                                                    if($CacheContent){\r\n                                                                        $NewDir         = New-Item -ItemType Directory $DatabaseDir\r\n                                                                        $NewFile        = New-Item -ItemType File $DatabasePath\r\n                                                                        $UpdateContent  = Set-Content $DatabasePath -Value $CacheContent\r\n                                                                        $FunctionResult = $true\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    elseif($CacheType -eq 'Selected'){\r\n                                                        if($CacheModelId){\r\n                                                            if($CacheTableId){\r\n                                                                $CacheArrayList = $CacheData.ArrayList\r\n                                                                $CachePath      = $CacheData.Path\r\n                                                                $CacheContent   = $CacheData.Content\r\n                                                                $DatabaseDir    = \"$CachePath\"+\"$CachePoint\"+'\\'+'cache'+'\\'+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'\r\n                                                                $DatabasePath   = \"$CachePath\"+\"$CachePoint\"+'\\'+'cache'+'\\'+\"$CacheModelId\"+'\\'+\"$CacheTableId\"+'\\'+'data.db'\r\n                                                                if(Test-Path $DatabasePath){\r\n                                                                    if($null -ne $($CacheArrayList -match \"^[\\d\\.]+$\") -and (($null -eq $($CacheArrayList -match '^[A-Z]+$')) -or ($false -eq $($CacheArrayList -match '^[A-Z]+$')))){\r\n                                                                        $DatabasePathGc = gc $DatabasePath\r\n                                                                        $DatabaseList   = $DatabasePathGc|iex\r\n\r\n                                                                        if($DatabaseList){\r\n                                                                            # VALIDATION ARRAY LIST\r\n                                                                            $DatabaseIndex  = $DatabaseList.Count-1\r\n                                                                            $ArrayNum       = 0\r\n                                                                            $ArrayNumList   = @()\r\n                                                                            foreach ($ArrayItem in $CacheArrayList) {\r\n                                                                                if($ArrayItem -gt $DatabaseIndex){\r\n                                                                                    $ArrayNumList   += $ArrayNum\r\n                                                                                    $ArrayValidation = $true\r\n                                                                                }\r\n                                                                                $ArrayNum++\r\n                                                                            }\r\n                                                                            if($ArrayValidation -eq $true){\r\n                                                                                foreach ($IndexNum in $ArrayNumList) {\r\n                                                                                    $CacheArrayList[$IndexNum] = $null\r\n                                                                                }\r\n                                                                                $CacheArrayList = $CacheArrayList.Where({ $null -ne $_ })\r\n                                                                            }\r\n\r\n                                                                            if(($CacheArrayList).Count -eq 1 -and ($CacheContent).Count -gt 1){\r\n                                                                                $DatabaseList[$CacheArrayList] = $CacheContent\r\n                                                                                $UpdateContent  = Set-Content $DatabasePath -Value $DatabaseList\r\n                                                                                $FunctionResult = $true\r\n                                                                            }\r\n                                                                            if(($CacheArrayList).Count -gt 1 -and ($CacheContent).Count -gt 1){\r\n                                                                                $num = 0\r\n                                                                                foreach ($Index in $CacheArrayList) {\r\n                                                                                    $DatabaseList[$Index] = $CacheContent[$num]\r\n                                                                                    $num++\r\n                                                                                }\r\n                                                                                $UpdateContent  = Set-Content $DatabasePath -Value $DatabaseList\r\n                                                                                $FunctionResult = $true\r\n                                                                            }\r\n                                                                            elseif(($CacheArrayList).Count -eq 1 -and ($CacheContent).Count -eq 1){\r\n                                                                                if($CacheArrayList -eq 0){\r\n                                                                                    $DatabaseList[$CacheArrayList] = $CacheContent\r\n                                                                                    $UpdateContent  = Set-Content $DatabasePath -Value $DatabaseList\r\n                                                                                    $FunctionResult = $true\r\n                                                                                }\r\n                                                                                elseif($CacheArrayList -gt 0){\r\n                                                                                    $DatabaseList[$CacheArrayList] = $CacheContent\r\n                                                                                    $UpdateContent  = Set-Content $DatabasePath -Value $DatabaseList\r\n                                                                                    $FunctionResult = $true\r\n                                                                                }\r\n                                                                                else{\r\n                                                                                    $FunctionResult = $false\r\n                                                                                }\r\n                                                                            }  \r\n                                                                            else{\r\n                                                                                $FunctionResult = $false\r\n                                                                            }\r\n                                                                        }\r\n                                                                        else{\r\n                                                                            $UpdateContent  = Set-Content $DatabasePath -Value $CacheContent\r\n                                                                            $FunctionResult = $true\r\n                                                                        }\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                    $FunctionResult = $DatabaseList\r\n                                                                }\r\n                                                                else{\r\n                                                                    if($CacheContent){\r\n                                                                        $NewDir         = New-Item -ItemType Directory $DatabaseDir\r\n                                                                        $NewFile        = New-Item -ItemType File $DatabasePath\r\n                                                                        $UpdateContent  = Set-Content $DatabasePath -Value $CacheContent\r\n                                                                        $FunctionResult = $true\r\n                                                                    }\r\n                                                                    else{\r\n                                                                        $FunctionResult = $false\r\n                                                                    }\r\n                                                                }\r\n                                                            }\r\n                                                            else{\r\n                                                                $FunctionResult = $false\r\n                                                            }\r\n                                                        }\r\n                                                        else{\r\n                                                            $FunctionResult = $false\r\n                                                        }\r\n                                                    }\r\n                                                    else{\r\n                                                        $FunctionResult = $false\r\n                                                    }\r\n                                                }                                                \r\n                                            }\r\n                                        }End{$FunctionResult}}"
}}]
